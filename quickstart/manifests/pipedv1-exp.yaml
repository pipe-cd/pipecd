---
# Source: pipedv1-exp/templates/rbac.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
---
# Source: pipedv1-exp/templates/secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
type: Opaque
data:
---
# Source: pipedv1-exp/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
data:
  piped-config.yaml: |-
    apiVersion: pipecd.dev/v1beta1
    kind: Piped
    spec:
      projectID: quickstart
      pipedID: <YOUR_PIPED_ID>
      pipedKeyData: <YOUR_PIPED_KEY_DATA>
      apiAddress: pipecd:8080
      syncInterval: 1m
      repositories:
        - repoId: examples
          remote: https://github.com/pipe-cd/examples.git
          branch: master
      plugins:
        - name: kubernetes # kubernetes plugin version: v0.3.0
          port: 7001
          url: https://github.com/pipe-cd/pipecd/releases/download/pkg%2Fapp%2Fpipedv1%2Fplugin%2Fkubernetes%2Fv0.3.0/kubernetes_v0.3.0_linux_amd64
          deployTargets:
            - name: kubernetes-local
              config:
                kubectlVersion: 1.33.0
        - name: wait # wait plugin version: v0.1.1
          port: 7002
          url: https://github.com/pipe-cd/pipecd/releases/download/pkg%2Fapp%2Fpipedv1%2Fplugin%2Fwait%2Fv0.1.1/wait_v0.1.1_linux_amd64
---
# Source: pipedv1-exp/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
rules:
  
  - apiGroups:
    - '*'
    resources:
    - '*'
    verbs:
    - '*'
  - nonResourceURLs:
    - '*'
    verbs:
    - '*'
---
# Source: pipedv1-exp/templates/rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: pipedv1-exp
subjects:
- kind: ServiceAccount
  name: pipedv1-exp
  namespace: pipecd
---
# Source: pipedv1-exp/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - name: admin
      port: 9085
      targetPort: admin
  selector:
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
---
# Source: pipedv1-exp/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pipedv1-exp
  labels:
    helm.sh/chart: pipedv1-exp-v1.0.0-alpha1
    app.kubernetes.io/name: pipedv1-exp
    app.kubernetes.io/instance: pipedv1-exp
    app.kubernetes.io/version: "v1.0.0-alpha1"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: pipedv1-exp
      app.kubernetes.io/instance: pipedv1-exp
  template:
    metadata:
      labels:
        app.kubernetes.io/name: pipedv1-exp
        app.kubernetes.io/instance: pipedv1-exp
      annotations:
        sidecar.istio.io/inject: "false"
        rollme: "sLHNS"
    spec:
      serviceAccountName: pipedv1-exp
      containers:
        - name: piped
          imagePullPolicy: IfNotPresent
          image: "ghcr.io/pipe-cd/pipedv1-exp:v1.0.0-alpha1"
          args:
            - run
            - --config-file=/etc/piped-config/piped-config.yaml
            - --metrics=true
            - --log-encoding=humanize
            - --log-level=info
            - --add-login-user-to-passwd=false
            - --insecure=true
          ports:
            - name: admin
              containerPort: 9085
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz
              port: admin
            # We increase this period value since Launcher stops and starts Piped gracefully.
            periodSeconds: 30
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /healthz
              port: admin
          volumeMounts:
            - name: piped-secret
              mountPath: /etc/piped-secret
              readOnly: true
            - name: piped-config
              mountPath: /etc/piped-config
              readOnly: true
          resources:
            {}
      volumes:
        - name: piped-secret
          secret:
            secretName: pipedv1-exp
            defaultMode: 0400
        - name: piped-config
          configMap:
            name: pipedv1-exp
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
