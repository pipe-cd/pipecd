{{- if .Values.config.create -}}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
data:
  {{ .Values.config.fileName }}: |-
{{ tpl .Values.config.data . | indent 4 }}
{{- end }}

{{- if .Values.monitoring.enabled }}
{{- if .Values.monitoring.clusterStats }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}-grafana-dashboards-cluster
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: "/tmp/dashboards/cluster"
data:
{{ range $path, $_ :=  .Files.Glob  "grafana-dashboards/cluster/**.json" }}
  {{ trimPrefix "grafana-dashboards/cluster/" $path | nindent 2 }}: |-
    {{ $.Files.Get $path | nindent 4 }}
{{ end }}
{{- end }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}-grafana-dashboards-control-plane
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: "/tmp/dashboards/control-plane"
data:
{{ range $path, $_ :=  .Files.Glob  "grafana-dashboards/control-plane/**.json" }}
  {{ trimPrefix "grafana-dashboards/control-plane/" $path | nindent 2 }}: |-
    {{ $.Files.Get $path | nindent 4 }}
{{ end }}
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}-grafana-dashboards-piped
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
    grafana_dashboard: "1"
  annotations:
    k8s-sidecar-target-directory: "/tmp/dashboards/piped"
data:
{{ range $path, $_ :=  .Files.Glob  "grafana-dashboards/piped/**.json" }}
  {{ trimPrefix "grafana-dashboards/piped/" $path | nindent 2 }}: |-
    {{ $.Files.Get $path | nindent 4 }}
{{ end }}
---

apiVersion: v1
kind: ConfigMap
metadata:
{{- range .Values.grafana.extraConfigmapMounts }}
{{- if eq .name "datasources" }}
  name: {{ .configMap }}
{{- end }}
{{- end }}
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
    grafana_datasources: "1"
data:
  datasources.yaml: |-
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        url: http://{{ include "pipecd.fullname" . }}-prometheus-server
        access: proxy
        version: 1
        isDefault: true
---

apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "pipecd.fullname" . }}-{{ .Values.prometheus.server.configMapOverrideName }}
  labels:
    {{- include "pipecd.labels" . | nindent 4 }}
data:
{{ range $path, $_ :=  .Files.Glob  "prom-rules/**.yml" }}
  {{ trimPrefix "prom-rules/" $path | nindent 2 }}: |-
    {{ $.Files.Get $path | nindent 4 }}
{{ end }}
  prometheus.yml: |-
    global:
      scrape_interval: 1m
      scrape_timeout: 10s
      evaluation_interval: 1m

    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml

{{- if .Values.prometheus.alertmanager.enabled }}
    alerting:
      alertmanagers:
      - kubernetes_sd_configs:
          - role: pod
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace]
          regex: {{ .Release.Namespace }}
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_app]
          regex: prometheus
          action: keep
        - source_labels: [__meta_kubernetes_pod_label_component]
          regex: alertmanager
          action: keep
        - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_probe]
          regex: {{ index .Values.prometheus.alertmanager.podAnnotations "prometheus.io/probe" | default ".*" }}
          action: keep
        - source_labels: [__meta_kubernetes_pod_container_port_number]
          regex: "9093"
          action: keep
{{- end }}

    scrape_configs:
      - job_name: pipecd-gateway
        scrape_interval: 1m
        metrics_path: /stats/prometheus
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: pipecd
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_component]
            action: keep
            regex: gateway
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: envoy-admin
        metric_relabel_configs:
          - source_labels: [__name__]
            target_label: method
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_bucket$
            replacement: $4
          - source_labels: [__name__]
            target_label: __name__
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_bucket$
            replacement: pipecd_gateway_requests_duration_bucket
          - source_labels: [__name__]
            target_label: method
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_sum$
            replacement: $4
          - source_labels: [__name__]
            target_label: __name__
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_sum$
            replacement: pipecd_gateway_requests_duration_sum
          - source_labels: [__name__]
            target_label: method
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_count$
            replacement: $4
          - source_labels: [__name__]
            target_label: __name__
            regex: envoy_cluster_grpc_(.+)_(.+)_(.+)_(.+)_upstream_rq_time_count$
            replacement: pipecd_gateway_requests_duration_count
          - source_labels: [envoy_cluster_name]
            target_label: pipecd_grpc_service
            regex: grpc-(.+)-service
            replacement: $1

      - job_name: pipecd-server
        scrape_interval: 1m
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: pipecd
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_component]
            action: keep
            regex: server
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: admin
        metric_relabel_configs:
          - source_labels: [grpc_service]
            target_label: pipecd_grpc_service
            regex: grpc.service.(.+)service.(.+)
            replacement: $1

      - job_name: pipecd-ops
        # This scrape_interval must not be greater than the interval of piped's stats-reporting.
        # ref: https://github.com/pipe-cd/pipecd/blob/a73d0913643ef1da05bc8898cf055c9893f16e0b/pkg/app/piped/statsreporter/reporter.go#L53
        scrape_interval: 1m
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: pipecd
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_component]
            action: keep
            regex: ops
          - source_labels: [__meta_kubernetes_pod_container_port_name]
            action: keep
            regex: admin

    {{- if .Values.monitoring.clusterStats }}
      - job_name: prometheus
        static_configs:
          - targets:
              - localhost:9090

      # Scrape config for API servers.
      - job_name: kubernetes-apiservers
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      - job_name: kubernetes-nodes
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics

      # Container stats for PipeCD services
      - job_name: kubernetes-nodes-cadvisor
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
          insecure_skip_verify: true
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            target_label: __metrics_path__
            replacement: /api/v1/nodes/$1/proxy/metrics/cadvisor
        metric_relabel_configs:
          - source_labels: [pod]
            target_label: service
            regex: (.+)-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)$
            replacement: $1

      # Cluster stats for PipeCD services
      - job_name: kube-state-metrics
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_app_kubernetes_io_name]
            action: keep
            regex: kube-state-metrics
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_node
        metric_relabel_configs:
          - source_labels: [pod]
            target_label: service
            regex: (.+)-[0-9a-zA-Z]+(-[0-9a-zA-Z]+)$
            replacement: $1

      - job_name: node-exporter
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_label_component]
            action: keep
            regex: node-exporter
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: kubernetes_name
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: kubernetes_node
    {{- end }}


  {{- end }}
