# Progressive delivery with canary strategy.
apiVersion: pipecd.dev/v1beta1
kind: KubernetesApp
spec:
  pipeline:
    stages:
      # Deploy the workloads of CANARY variant. In this case, the number of
      # workload replicas of CANARY variant is 10% of the replicas number of PRIMARY variant.
      - name: K8S_CANARY_ROLLOUT
        with:
          replicas: 10%
      # The percentage of traffic each variant should receive.
      # In this case, CANARY variant will receive 10% of traffic,
      # while PRIMARY will receive 90% of traffic.
      - name: K8S_TRAFFIC_ROUTING
        with:
          canary: 10
      # Update the workload of PRIMARY variant to the new version.
      - name: K8S_PRIMARY_ROLLOUT
      # The percentage of traffic each variant should receive.
      # In this case, PRIMARY variant will receive all of the traffic.
      - name: K8S_TRAFFIC_ROUTING
        with:
          primary: 100
      # Destroy all workloads of CANARY variant.
      - name: K8S_CANARY_CLEAN

---
# Progressive delivery with canary strategy.
# The canary process has multiple phases: from 10% then analysis
# then up to 20% then analysis then 100%.
apiVersion: pipecd.dev/v1beta1
kind: KubernetesApp
spec:
  pipeline:
    stages:
      - name: K8S_CANARY_ROLLOUT
        with:
          replicas: 20%
      - name: K8S_TRAFFIC_ROUTING
        with:
          canary: 10
      - name: ANALYSIS
        with:
          duration: 10m
      - name: K8S_TRAFFIC_ROUTING
        with:
          canary: 20
      - name: ANALYSIS
        with:
          duration: 10m
      - name: K8S_PRIMARY_ROLLOUT
      - name: K8S_TRAFFIC_ROUTING
        with:
          primary: 100
      - name: K8S_CANARY_CLEAN
