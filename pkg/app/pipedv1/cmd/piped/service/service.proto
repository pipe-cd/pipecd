// Copyright 2024 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package grpc.piped.service;
option go_package = "github.com/pipe-cd/pipecd/pkg/app/pipedv1/cmd/piped/service";

import "validate/validate.proto";

// PluginService provides the ability to interact with plugins.
service PluginService {
    // DecryptSecret decrypts the given secret.
    rpc DecryptSecret(DecryptSecretRequest) returns (DecryptSecretResponse) {}
    // InstallTool installs the given tool.
    // installed binary's filename becomes `name-version`.
    rpc InstallTool(InstallToolRequest) returns (InstallToolResponse) {}
}

message DecryptSecretRequest {
    string secret = 1 [(validate.rules).string.min_len = 1];
}

message DecryptSecretResponse {
    string decrypted_secret = 1;
}

message InstallToolRequest {
    // Name of the tool.
    string name = 1 [(validate.rules).string.min_len = 1];
    // Version of the tool.
    string version = 2 [(validate.rules).string.min_len = 1];
    // Install script to install the tool.
    // This script is templated with the following variables:
    // - {{ .Name }}: name of the tool.
    // - {{ .Version }}: version of the tool.
    // - {{ .OutPath }}: file path where the tool will be installed.
    // - {{ .TmpDir }}: directory where the tool will be downloaded and extracted.
    // - {{ .Arch }}: GOARCH of the current machine.
    // - {{ .Os }}: GOOS of the current machine.
    //
    // The script should return 0 if the installation is successful.
    // Otherwise, it should return a non-zero value.
    //
    // The tool should be placed at {{ .OutPath }}
    // e.g.) cp path/to/kubectl {{ .OutPath }}
    // Then piped move it to the correct directory / filename and make it executable.
    string install_script = 3 [(validate.rules).string.min_len = 1];
}

message InstallToolResponse {
    // Installed path of the tool.
    string installed_path = 1;
}
