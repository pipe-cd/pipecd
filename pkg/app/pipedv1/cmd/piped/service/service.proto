// Copyright 2024 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package grpc.piped.service;
option go_package = "github.com/pipe-cd/pipecd/pkg/app/pipedv1/cmd/piped/service";

import "validate/validate.proto";
import "pkg/model/command.proto";
import "pkg/model/analysis_result.proto";

// PluginService provides the ability to interact with plugins.
service PluginService {
    // ListStageCommands returns the list requested commands to the given stage.
    rpc ListStageCommands(ListStageCommandsRequest) returns (ListStageCommandsResponse) {}

    // Put and Get the latest analysis result of a given application.
    // Used by the analysis plugin to store and retrieve the latest analysis result.
    rpc GetLatestAnalysisResult(GetLatestAnalysisResultRequest) returns (GetLatestAnalysisResultResponse) {}
    rpc PutLatestAnalysisResult(PutLatestAnalysisResultRequest) returns (PutLatestAnalysisResultResponse) {}
}

message ListStageCommandsRequest {
    string deployment_id = 1 [(validate.rules).string = {min_len: 1}];
    string stage_id = 2 [(validate.rules).string = {min_len: 1}];
}

message ListStageCommandsResponse {
    repeated model.Command commands = 1;
}

message GetLatestAnalysisResultRequest {
    string application_id = 1 [(validate.rules).string = {min_len: 1}];
}

message GetLatestAnalysisResultResponse {
    model.AnalysisResult analysis_result = 1;
}

message PutLatestAnalysisResultRequest {
    string application_id = 1 [(validate.rules).string = {min_len: 1}];
    model.AnalysisResult analysis_result = 2;
}

message PutLatestAnalysisResultResponse {
}
