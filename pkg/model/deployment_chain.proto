// Copyright 2023 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package model;
option go_package = "github.com/pipe-cd/pipecd/pkg/model";

import "validate/validate.proto";
import "pkg/model/deployment.proto";

// ChainStatus represents the current status of deployment chain.
enum ChainStatus {
    // DEPLOYMENT_CHAIN_PENDING means the chain just initialized,
    // all block deployments have not been initialized or still at PENDING.
    DEPLOYMENT_CHAIN_PENDING = 0;
    // DEPLOYMENT_CHAIN_RUNNING means at least one block has node, which has
    // its deploymentRef and that deployment is RUNNING or after that state.
    DEPLOYMENT_CHAIN_RUNNING = 1;
    // DEPLOYMENT_CHAIN_SUCCESS means all blocks in the chain had finished with
    // DEPLOYMENT_BLOCK_SUCCESS status.
    DEPLOYMENT_CHAIN_SUCCESS = 2;
    // DEPLOYMENT_CHAIN_FAILURE means one of the chain's blocks had finished with
    // DEPLOYMENT_BLOCK_FAILURE status.
    DEPLOYMENT_CHAIN_FAILURE = 3;
    // DEPLOYMENT_CHAIN_CANCELLED means one of the chain's blocks had finished with
    // DEPLOYMENT_BLOCK_CANCELLED status.
    DEPLOYMENT_CHAIN_CANCELLED = 4;
}

message DeploymentChain {
    // The generated unique identifier.
    string id = 1 [(validate.rules).string.min_len = 1];
    // The ID of the project this deployment chain belongs to.
    string project_id = 2 [(validate.rules).string.min_len = 1];
    // Status of this deployment chain.
    ChainStatus status = 3 [(validate.rules).enum.defined_only = true];
    // List of all deployment block in the chain which contains all
    // configuration required to perform deployment(s).
    repeated ChainBlock blocks = 4;
    // Unix time when all the applications in this chain are deployed.
    int64 completed_at = 100 [(validate.rules).int64.gte = 0];
    // Unix time when the deployment chain is created.
    int64 created_at = 101 [(validate.rules).int64.gt = 0];
    // Unix time of the last time when the deployment chain is updated.
    int64 updated_at = 102 [(validate.rules).int64.gt = 0];
}

message ChainApplicationRef {
    string application_id = 1 [(validate.rules).string.min_len = 1];
    string application_name = 2;
}

message ChainDeploymentRef {
    string deployment_id = 1 [(validate.rules).string.min_len = 1];
    DeploymentStatus status = 2 [(validate.rules).enum.defined_only = true];
    string status_reason = 3;
}

message ChainNode {
    ChainApplicationRef application_ref = 1 [(validate.rules).message.required = true];
    ChainDeploymentRef deployment_ref = 2;
}

// ChainBlockStatus represents the current status of a block in deployment chain.
enum ChainBlockStatus {
    // DEPLOYMENT_BLOCK_PENDING means the block's nodes just initialized,
    // all node deployments have not been initialized or still at PENDING.
    DEPLOYMENT_BLOCK_PENDING = 0;
    // DEPLOYMENT_BLOCK_RUNNING means at least one of the block's nodes has
    // its deploymentRef and that deployment is RUNNING or after that state.
    DEPLOYMENT_BLOCK_RUNNING = 1;
    // DEPLOYMENT_BLOCK_SUCCESS means all nodes in the block had finished with
    // DEPLOYMENT_SUCCESS status.
    DEPLOYMENT_BLOCK_SUCCESS = 2;
    // DEPLOYMENT_BLOCK_FAILURE means one of the block's nodes had finished with
    // DEPLOYMENT_FAILURE status.
    DEPLOYMENT_BLOCK_FAILURE = 3;
    // DEPLOYMENT_BLOCK_CANCELLED means one of the block's nodes had finished with
    // DEPLOYMENT_CANCELLED status.
    DEPLOYMENT_BLOCK_CANCELLED = 4;
}

message ChainBlock {
    // List of applications which should be deployed at the same time in chain.
    repeated ChainNode nodes = 1;
    // Status of this deployment chain block.
    ChainBlockStatus status = 2 [(validate.rules).enum.defined_only = true];

    // Unix time when the deployment chain node is started.
    int64 started_at = 100 [(validate.rules).int64.gte = 0];
    // Unix time when all the applications in this chain node are deployed.
    int64 completed_at = 101 [(validate.rules).int64.gte = 0];
}
