// Copyright 2021 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package pipe.model;
option go_package = "github.com/pipe-cd/pipe/pkg/model";

import "validate/validate.proto";
import "pkg/model/common.proto";
import "pkg/model/deployment.proto";

message DeploymentChain {
    // The generated unique identifier.
    string id = 1 [(validate.rules).string.min_len = 1];
    // The ID of the project this environment belongs to.
    string project_id = 2 [(validate.rules).string.min_len = 1];
    // List of all deployment block in the chain which contains all
    // configuration required to perform deployment(s).
    repeated ChainBlock blocks = 3;
    // Unix time when all the applications in this chain are deployed.
    int64 completed_at = 100 [(validate.rules).int64.gte = 0];
    // Unix time when the deployment chain is created.
    int64 created_at = 101 [(validate.rules).int64.gt = 0];
    // Unix time of the last time when the deployment chain is updated.
    int64 updated_at = 102 [(validate.rules).int64.gt = 0];
}

message ChainApplicationRef {
    string application_id = 1 [(validate.rules).string.min_len = 1];
    string application_name = 2;
}

message ChainDeploymentRef {
    string deployment_id = 1 [(validate.rules).string.min_len = 1];
}

message ChainNode {
    ChainApplicationRef application_ref = 1 [(validate.rules).message.required = true];
    ChainDeploymentRef deployment_ref = 2;
}

message ChainBlock {
    // List of applications which should be deployed at the same time in chain.
    repeated ChainNode nodes = 1;

    // Unix time when the deployment chain node is started.
    int64 started_at = 100 [(validate.rules).int64.gte = 0];
    // Unix time when all the applications in this chain node are deployed.
    int64 completed_at = 101 [(validate.rules).int64.gte = 0];
}
