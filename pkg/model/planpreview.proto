
// Copyright 2024 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package model;
option go_package = "github.com/pipe-cd/pipecd/pkg/model";

import "validate/validate.proto";
import "pkg/model/common.proto";

message PlanPreviewCommandResult {
    string command_id = 1 [(validate.rules).string.min_len = 1];
    // The Piped that handles command.
    string piped_id = 2 [(validate.rules).string.min_len = 1];
    // Web URL to the piped page.
    // This is only filled before returning to the client.
    string piped_url = 3;

    repeated ApplicationPlanPreviewResult results = 4;
    // Error while handling command.
    string error = 5;

    string piped_name = 6;
}

message ApplicationPlanPreviewResult {
    reserved 6 to 8;

    // Application information.
    string application_id = 1 [(validate.rules).string.min_len = 1];
    string application_name = 2 [(validate.rules).string.min_len = 1];
    // Web URL to the application page.
    // This is only filled before returning to the client.
    string application_url = 3;
    // Deprecated: Do not use in pipedv1
    ApplicationKind application_kind = 4 [(validate.rules).enum.defined_only = true, deprecated = true];
    string application_directory = 5 [(validate.rules).string.min_len = 1];

    string piped_id = 9 [(validate.rules).string.min_len = 1];
    string project_id = 10 [(validate.rules).string.min_len = 1];

    map<string, string> labels = 11;

    // Target commit information.
    string head_branch = 20 [(validate.rules).string.min_len = 1];
    string head_commit = 21 [(validate.rules).string.min_len = 1];

    // Planpreview result.
    SyncStrategy sync_strategy = 30;
    // Deprecated: Use plugin_plan_results instead in pipedv1.
    bytes plan_summary = 31 [deprecated = true];
    // Deprecated: Use plugin_plan_results instead in pipedv1.
    bytes plan_details = 32 [deprecated = true];
    // Mark if no change were detected.
    bool no_change = 33;

    repeated PluginPlanPreviewResult plugin_plan_results = 34;
    // Note: In pipedv1, this will not be empty. It will be "<unknown>" if plugins are not successfully loaded. 
    repeated string plugin_names = 35;

    // Error while building planpreview result.
    string error = 40;

    int64 created_at = 90 [(validate.rules).int64.gt = 0];
}

message PluginPlanPreviewResult {
    string plugin_name = 1 [(validate.rules).string.min_len = 1];
    // Name of the deploy target.
    string deploy_target = 2;
    bytes plan_summary = 3;
    bytes plan_details = 4;

    // The language to render the details like "diff","hcl".
    // If this is empty, "diff" will be used by default.
    string diff_language = 5;
}