// Copyright 2023 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package model;
option go_package = "github.com/pipe-cd/pipecd/pkg/model";

import "validate/validate.proto";

message APIKey {
    enum Role {
        READ_ONLY = 0;
        READ_WRITE = 1;
    }

    // The unique ID of the key.
    string id = 1 [(validate.rules).string.min_len = 1];
    // The name of the key.
    string name = 2 [(validate.rules).string.min_len = 1];
    // The hash value of key string.
    string key_hash = 3 [(validate.rules).string.min_len = 1];
    // The project this key belongs to.
    string project_id = 4 [(validate.rules).string.min_len = 1];
    // The role of the key.
    Role role = 5 [(validate.rules).enum.defined_only = true];
    // Who created the key.
    string creator = 6 [(validate.rules).string.min_len = 1];
    // Unix time of the last time when the key was used.
    int64 last_used_at = 7 [(validate.rules).int64.gte = 0];

    // Whether the key is disabled or not.
    bool disabled = 13;
    // Unix time when the key was created.
    int64 created_at = 14  [(validate.rules).int64.gt = 0];
    // Unix time of the last time when the key was updated.
    int64 updated_at = 15 [(validate.rules).int64.gt = 0];
}
