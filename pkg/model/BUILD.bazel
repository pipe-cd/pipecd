load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

go_library(
    name = "go_default_library",
    srcs = [
        "analysis_result.pb.go",
        "analysis_result.pb.validate.go",
        "analysisprovider.go",
        "apikey.go",
        "apikey.pb.go",
        "apikey.pb.validate.go",
        "application.go",
        "application.pb.go",
        "application.pb.validate.go",
        "application_live_state.go",
        "application_live_state.pb.go",
        "application_live_state.pb.validate.go",
        "cloudprovider.go",
        "command.go",
        "command.pb.go",
        "command.pb.validate.go",
        "common.go",
        "common.pb.go",
        "common.pb.validate.go",
        "datastore.go",
        "deployment.go",
        "deployment.pb.go",
        "deployment.pb.validate.go",
        "deployment_chain.go",
        "deployment_chain.pb.go",
        "deployment_chain.pb.validate.go",
        "docs.go",
        "event.go",
        "event.pb.go",
        "event.pb.validate.go",
        "filestore.go",
        "insight.pb.go",
        "insight.pb.validate.go",
        "logblock.pb.go",
        "logblock.pb.validate.go",
        "model.go",
        "notificationevent.go",
        "notificationevent.pb.go",
        "notificationevent.pb.validate.go",
        "piped.go",
        "piped.pb.go",
        "piped.pb.validate.go",
        "piped_stat.go",
        "piped_stat.pb.go",
        "piped_stat.pb.validate.go",
        "planpreview.go",
        "planpreview.pb.go",
        "planpreview.pb.validate.go",
        "project.go",
        "project.pb.go",
        "project.pb.validate.go",
        "role.pb.go",
        "role.pb.validate.go",
        "stage.go",
        "user.pb.go",
        "user.pb.validate.go",
    ],
    importpath = "github.com/pipe-cd/pipecd/pkg/model",
    visibility = ["//visibility:public"],
    deps = [
        "@com_github_envoyproxy_protoc_gen_validate//validate:go_default_library",
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_google_protobuf//reflect/protoreflect:go_default_library",
        "@org_golang_google_protobuf//runtime/protoimpl:go_default_library",
        "@org_golang_google_protobuf//types/descriptorpb:go_default_library",
        "@org_golang_google_protobuf//types/known/anypb:go_default_library",
        "@org_golang_x_crypto//bcrypt:go_default_library",
        "@org_golang_x_oauth2//:go_default_library",
        "@org_golang_x_oauth2//github:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "apikey_test.go",
        "application_live_state_test.go",
        "application_test.go",
        "common_test.go",
        "deployment_chain_test.go",
        "deployment_test.go",
        "event_test.go",
        "model_test.go",
        "piped_test.go",
        "project_test.go",
    ],
    embed = [":go_default_library"],
    deps = [
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_x_crypto//bcrypt:go_default_library",
    ],
)
