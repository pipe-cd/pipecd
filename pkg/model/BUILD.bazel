load("@rules_proto//proto:defs.bzl", "proto_library")
load("@io_bazel_rules_go//go:def.bzl", "go_library", "go_test")

proto_library(
    name = "model_proto",
    srcs = [
        "analysis_result.proto",
        "apikey.proto",
        "application.proto",
        "application_live_state.proto",
        "command.proto",
        "common.proto",
        "deployment.proto",
        "deployment_chain.proto",
        "event.proto",
        "insight.proto",
        "logblock.proto",
        "notificationevent.proto",
        "piped.proto",
        "piped_stat.proto",
        "planpreview.proto",
        "project.proto",
        "role.proto",
        "user.proto",
    ],
    visibility = ["//visibility:public"],
    #keep
    deps = [
        "@com_github_envoyproxy_protoc_gen_validate//validate:validate_proto",
        "@com_google_protobuf//:descriptor_proto",
    ],
)

load("//bazel:pgv_go_proto.bzl", "pgv_go_proto_library")

pgv_go_proto_library(
    name = "model_go_proto",
    compilers = ["@io_bazel_rules_go//proto:go_proto"],
    importpath = "github.com/pipe-cd/pipecd/pkg/model",
    proto = ":model_proto",
    visibility = ["//visibility:public"],
)

go_library(
    name = "go_default_library",
    srcs = [
        "analysisprovider.go",
        "apikey.go",
        "application.go",
        "application_live_state.go",
        "cloudprovider.go",
        "command.go",
        "common.go",
        "datastore.go",
        "deployment.go",
        "deployment_chain.go",
        "docs.go",
        "event.go",
        "filestore.go",
        "model.go",
        "notificationevent.go",
        "piped.go",
        "piped_stat.go",
        "planpreview.go",
        "project.go",
        "stage.go",
    ],
    embed = [":model_go_proto"],
    importpath = "github.com/pipe-cd/pipecd/pkg/model",
    visibility = ["//visibility:public"],
    deps = [
        "@org_golang_google_protobuf//proto:go_default_library",
        "@org_golang_x_crypto//bcrypt:go_default_library",
        "@org_golang_x_oauth2//:go_default_library",
        "@org_golang_x_oauth2//github:go_default_library",
    ],
)

go_test(
    name = "go_default_test",
    size = "small",
    srcs = [
        "apikey_test.go",
        "application_live_state_test.go",
        "application_test.go",
        "common_test.go",
        "deployment_chain_test.go",
        "deployment_test.go",
        "event_test.go",
        "model_test.go",
        "piped_test.go",
        "project_test.go",
    ],
    data = glob(["testdata/**"]),
    embed = [":go_default_library"],
    deps = [
        "@com_github_stretchr_testify//assert:go_default_library",
        "@com_github_stretchr_testify//require:go_default_library",
        "@org_golang_x_crypto//bcrypt:go_default_library",
    ],
)
