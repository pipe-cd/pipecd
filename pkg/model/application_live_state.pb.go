// Copyright 2023 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.19.4
// source: pkg/model/application_live_state.proto

package model

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ApplicationLiveStateSnapshot_Status int32

const (
	ApplicationLiveStateSnapshot_UNKNOWN ApplicationLiveStateSnapshot_Status = 0
	ApplicationLiveStateSnapshot_HEALTHY ApplicationLiveStateSnapshot_Status = 1
	ApplicationLiveStateSnapshot_OTHER   ApplicationLiveStateSnapshot_Status = 2
)

// Enum value maps for ApplicationLiveStateSnapshot_Status.
var (
	ApplicationLiveStateSnapshot_Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "OTHER",
	}
	ApplicationLiveStateSnapshot_Status_value = map[string]int32{
		"UNKNOWN": 0,
		"HEALTHY": 1,
		"OTHER":   2,
	}
)

func (x ApplicationLiveStateSnapshot_Status) Enum() *ApplicationLiveStateSnapshot_Status {
	p := new(ApplicationLiveStateSnapshot_Status)
	*p = x
	return p
}

func (x ApplicationLiveStateSnapshot_Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationLiveStateSnapshot_Status) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_model_application_live_state_proto_enumTypes[0].Descriptor()
}

func (ApplicationLiveStateSnapshot_Status) Type() protoreflect.EnumType {
	return &file_pkg_model_application_live_state_proto_enumTypes[0]
}

func (x ApplicationLiveStateSnapshot_Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationLiveStateSnapshot_Status.Descriptor instead.
func (ApplicationLiveStateSnapshot_Status) EnumDescriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{0, 0}
}

type KubernetesResourceState_HealthStatus int32

const (
	KubernetesResourceState_UNKNOWN KubernetesResourceState_HealthStatus = 0
	KubernetesResourceState_HEALTHY KubernetesResourceState_HealthStatus = 1
	KubernetesResourceState_OTHER   KubernetesResourceState_HealthStatus = 2
)

// Enum value maps for KubernetesResourceState_HealthStatus.
var (
	KubernetesResourceState_HealthStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "OTHER",
	}
	KubernetesResourceState_HealthStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"HEALTHY": 1,
		"OTHER":   2,
	}
)

func (x KubernetesResourceState_HealthStatus) Enum() *KubernetesResourceState_HealthStatus {
	p := new(KubernetesResourceState_HealthStatus)
	*p = x
	return p
}

func (x KubernetesResourceState_HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesResourceState_HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_model_application_live_state_proto_enumTypes[1].Descriptor()
}

func (KubernetesResourceState_HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_model_application_live_state_proto_enumTypes[1]
}

func (x KubernetesResourceState_HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesResourceState_HealthStatus.Descriptor instead.
func (KubernetesResourceState_HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{6, 0}
}

type KubernetesResourceStateEvent_Type int32

const (
	KubernetesResourceStateEvent_ADD_OR_UPDATED KubernetesResourceStateEvent_Type = 0
	KubernetesResourceStateEvent_DELETED        KubernetesResourceStateEvent_Type = 2
)

// Enum value maps for KubernetesResourceStateEvent_Type.
var (
	KubernetesResourceStateEvent_Type_name = map[int32]string{
		0: "ADD_OR_UPDATED",
		2: "DELETED",
	}
	KubernetesResourceStateEvent_Type_value = map[string]int32{
		"ADD_OR_UPDATED": 0,
		"DELETED":        2,
	}
)

func (x KubernetesResourceStateEvent_Type) Enum() *KubernetesResourceStateEvent_Type {
	p := new(KubernetesResourceStateEvent_Type)
	*p = x
	return p
}

func (x KubernetesResourceStateEvent_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KubernetesResourceStateEvent_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_model_application_live_state_proto_enumTypes[2].Descriptor()
}

func (KubernetesResourceStateEvent_Type) Type() protoreflect.EnumType {
	return &file_pkg_model_application_live_state_proto_enumTypes[2]
}

func (x KubernetesResourceStateEvent_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KubernetesResourceStateEvent_Type.Descriptor instead.
func (KubernetesResourceStateEvent_Type) EnumDescriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{7, 0}
}

type CloudRunResourceState_HealthStatus int32

const (
	CloudRunResourceState_UNKNOWN CloudRunResourceState_HealthStatus = 0
	CloudRunResourceState_HEALTHY CloudRunResourceState_HealthStatus = 1
	CloudRunResourceState_OTHER   CloudRunResourceState_HealthStatus = 2
)

// Enum value maps for CloudRunResourceState_HealthStatus.
var (
	CloudRunResourceState_HealthStatus_name = map[int32]string{
		0: "UNKNOWN",
		1: "HEALTHY",
		2: "OTHER",
	}
	CloudRunResourceState_HealthStatus_value = map[string]int32{
		"UNKNOWN": 0,
		"HEALTHY": 1,
		"OTHER":   2,
	}
)

func (x CloudRunResourceState_HealthStatus) Enum() *CloudRunResourceState_HealthStatus {
	p := new(CloudRunResourceState_HealthStatus)
	*p = x
	return p
}

func (x CloudRunResourceState_HealthStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CloudRunResourceState_HealthStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_pkg_model_application_live_state_proto_enumTypes[3].Descriptor()
}

func (CloudRunResourceState_HealthStatus) Type() protoreflect.EnumType {
	return &file_pkg_model_application_live_state_proto_enumTypes[3]
}

func (x CloudRunResourceState_HealthStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CloudRunResourceState_HealthStatus.Descriptor instead.
func (CloudRunResourceState_HealthStatus) EnumDescriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{8, 0}
}

// ApplicationLiveStateSnapshot represents the full live state information of an application
// at a specific timestamp.
type ApplicationLiveStateSnapshot struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ApplicationId string                              `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	PipedId       string                              `protobuf:"bytes,3,opt,name=piped_id,json=pipedId,proto3" json:"piped_id,omitempty"`
	ProjectId     string                              `protobuf:"bytes,4,opt,name=project_id,json=projectId,proto3" json:"project_id,omitempty"`
	Kind          ApplicationKind                     `protobuf:"varint,5,opt,name=kind,proto3,enum=model.ApplicationKind" json:"kind,omitempty"`
	HealthStatus  ApplicationLiveStateSnapshot_Status `protobuf:"varint,6,opt,name=health_status,json=healthStatus,proto3,enum=model.ApplicationLiveStateSnapshot_Status" json:"health_status,omitempty"`
	Kubernetes    *KubernetesApplicationLiveState     `protobuf:"bytes,10,opt,name=kubernetes,proto3" json:"kubernetes,omitempty"`
	Terraform     *TerraformApplicationLiveState      `protobuf:"bytes,11,opt,name=terraform,proto3" json:"terraform,omitempty"`
	Cloudrun      *CloudRunApplicationLiveState       `protobuf:"bytes,12,opt,name=cloudrun,proto3" json:"cloudrun,omitempty"`
	Lambda        *LambdaApplicationLiveState         `protobuf:"bytes,13,opt,name=lambda,proto3" json:"lambda,omitempty"`
	Version       *ApplicationLiveStateVersion        `protobuf:"bytes,15,opt,name=version,proto3" json:"version,omitempty"`
}

func (x *ApplicationLiveStateSnapshot) Reset() {
	*x = ApplicationLiveStateSnapshot{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationLiveStateSnapshot) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationLiveStateSnapshot) ProtoMessage() {}

func (x *ApplicationLiveStateSnapshot) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationLiveStateSnapshot.ProtoReflect.Descriptor instead.
func (*ApplicationLiveStateSnapshot) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{0}
}

func (x *ApplicationLiveStateSnapshot) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ApplicationLiveStateSnapshot) GetPipedId() string {
	if x != nil {
		return x.PipedId
	}
	return ""
}

func (x *ApplicationLiveStateSnapshot) GetProjectId() string {
	if x != nil {
		return x.ProjectId
	}
	return ""
}

func (x *ApplicationLiveStateSnapshot) GetKind() ApplicationKind {
	if x != nil {
		return x.Kind
	}
	return ApplicationKind_KUBERNETES
}

func (x *ApplicationLiveStateSnapshot) GetHealthStatus() ApplicationLiveStateSnapshot_Status {
	if x != nil {
		return x.HealthStatus
	}
	return ApplicationLiveStateSnapshot_UNKNOWN
}

func (x *ApplicationLiveStateSnapshot) GetKubernetes() *KubernetesApplicationLiveState {
	if x != nil {
		return x.Kubernetes
	}
	return nil
}

func (x *ApplicationLiveStateSnapshot) GetTerraform() *TerraformApplicationLiveState {
	if x != nil {
		return x.Terraform
	}
	return nil
}

func (x *ApplicationLiveStateSnapshot) GetCloudrun() *CloudRunApplicationLiveState {
	if x != nil {
		return x.Cloudrun
	}
	return nil
}

func (x *ApplicationLiveStateSnapshot) GetLambda() *LambdaApplicationLiveState {
	if x != nil {
		return x.Lambda
	}
	return nil
}

func (x *ApplicationLiveStateSnapshot) GetVersion() *ApplicationLiveStateVersion {
	if x != nil {
		return x.Version
	}
	return nil
}

type ApplicationLiveStateVersion struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Timestamp when the snapshot is created.
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// Increment number part for the same timestamp.
	Index int64 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
}

func (x *ApplicationLiveStateVersion) Reset() {
	*x = ApplicationLiveStateVersion{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationLiveStateVersion) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationLiveStateVersion) ProtoMessage() {}

func (x *ApplicationLiveStateVersion) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationLiveStateVersion.ProtoReflect.Descriptor instead.
func (*ApplicationLiveStateVersion) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{1}
}

func (x *ApplicationLiveStateVersion) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *ApplicationLiveStateVersion) GetIndex() int64 {
	if x != nil {
		return x.Index
	}
	return 0
}

type KubernetesApplicationLiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*KubernetesResourceState `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *KubernetesApplicationLiveState) Reset() {
	*x = KubernetesApplicationLiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesApplicationLiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesApplicationLiveState) ProtoMessage() {}

func (x *KubernetesApplicationLiveState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesApplicationLiveState.ProtoReflect.Descriptor instead.
func (*KubernetesApplicationLiveState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{2}
}

func (x *KubernetesApplicationLiveState) GetResources() []*KubernetesResourceState {
	if x != nil {
		return x.Resources
	}
	return nil
}

type TerraformApplicationLiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *TerraformApplicationLiveState) Reset() {
	*x = TerraformApplicationLiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TerraformApplicationLiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TerraformApplicationLiveState) ProtoMessage() {}

func (x *TerraformApplicationLiveState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TerraformApplicationLiveState.ProtoReflect.Descriptor instead.
func (*TerraformApplicationLiveState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{3}
}

type CloudRunApplicationLiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Resources []*CloudRunResourceState `protobuf:"bytes,1,rep,name=resources,proto3" json:"resources,omitempty"`
}

func (x *CloudRunApplicationLiveState) Reset() {
	*x = CloudRunApplicationLiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudRunApplicationLiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudRunApplicationLiveState) ProtoMessage() {}

func (x *CloudRunApplicationLiveState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudRunApplicationLiveState.ProtoReflect.Descriptor instead.
func (*CloudRunApplicationLiveState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{4}
}

func (x *CloudRunApplicationLiveState) GetResources() []*CloudRunResourceState {
	if x != nil {
		return x.Resources
	}
	return nil
}

type LambdaApplicationLiveState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LambdaApplicationLiveState) Reset() {
	*x = LambdaApplicationLiveState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LambdaApplicationLiveState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LambdaApplicationLiveState) ProtoMessage() {}

func (x *LambdaApplicationLiveState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LambdaApplicationLiveState.ProtoReflect.Descriptor instead.
func (*LambdaApplicationLiveState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{5}
}

// KubernetesResourceState represents the state of a single kubernetes resource object.
type KubernetesResourceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID across the whole cluster generated by Kubernetes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The sorted list of unique IDs of the owners that depended by this resource.
	// The owner is another resource that created and managing this resource.
	OwnerIds []string `protobuf:"bytes,2,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty"`
	// The sorted list of unique IDs of the parents.
	ParentIds []string `protobuf:"bytes,3,rep,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	// The unique name for the type of resource.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The api version of this resource represented by "group/version".
	ApiVersion string `protobuf:"bytes,5,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The kind of this resource.
	Kind string `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	// The namespace this resource belongs to.
	// This can be empty for non-namespaced resources.
	Namespace         string                               `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HealthStatus      KubernetesResourceState_HealthStatus `protobuf:"varint,8,opt,name=health_status,json=healthStatus,proto3,enum=model.KubernetesResourceState_HealthStatus" json:"health_status,omitempty"`
	HealthDescription string                               `protobuf:"bytes,9,opt,name=health_description,json=healthDescription,proto3" json:"health_description,omitempty"`
	// The timestamp when this resource was created.
	CreatedAt int64 `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The timestamp of the last time when this resource was updated.
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *KubernetesResourceState) Reset() {
	*x = KubernetesResourceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesResourceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesResourceState) ProtoMessage() {}

func (x *KubernetesResourceState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesResourceState.ProtoReflect.Descriptor instead.
func (*KubernetesResourceState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{6}
}

func (x *KubernetesResourceState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KubernetesResourceState) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *KubernetesResourceState) GetParentIds() []string {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *KubernetesResourceState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *KubernetesResourceState) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *KubernetesResourceState) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *KubernetesResourceState) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *KubernetesResourceState) GetHealthStatus() KubernetesResourceState_HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return KubernetesResourceState_UNKNOWN
}

func (x *KubernetesResourceState) GetHealthDescription() string {
	if x != nil {
		return x.HealthDescription
	}
	return ""
}

func (x *KubernetesResourceState) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *KubernetesResourceState) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

type KubernetesResourceStateEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The uniquely generated identifier for this event.
	Id              string                            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	ApplicationId   string                            `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Type            KubernetesResourceStateEvent_Type `protobuf:"varint,3,opt,name=type,proto3,enum=model.KubernetesResourceStateEvent_Type" json:"type,omitempty"`
	State           *KubernetesResourceState          `protobuf:"bytes,4,opt,name=state,proto3" json:"state,omitempty"`
	SnapshotVersion *ApplicationLiveStateVersion      `protobuf:"bytes,5,opt,name=snapshot_version,json=snapshotVersion,proto3" json:"snapshot_version,omitempty"`
	CreatedAt       int64                             `protobuf:"varint,15,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *KubernetesResourceStateEvent) Reset() {
	*x = KubernetesResourceStateEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KubernetesResourceStateEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KubernetesResourceStateEvent) ProtoMessage() {}

func (x *KubernetesResourceStateEvent) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KubernetesResourceStateEvent.ProtoReflect.Descriptor instead.
func (*KubernetesResourceStateEvent) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{7}
}

func (x *KubernetesResourceStateEvent) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *KubernetesResourceStateEvent) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *KubernetesResourceStateEvent) GetType() KubernetesResourceStateEvent_Type {
	if x != nil {
		return x.Type
	}
	return KubernetesResourceStateEvent_ADD_OR_UPDATED
}

func (x *KubernetesResourceStateEvent) GetState() *KubernetesResourceState {
	if x != nil {
		return x.State
	}
	return nil
}

func (x *KubernetesResourceStateEvent) GetSnapshotVersion() *ApplicationLiveStateVersion {
	if x != nil {
		return x.SnapshotVersion
	}
	return nil
}

func (x *KubernetesResourceStateEvent) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

// CloudRunResourceState represents the state of a single CloudRun resource object.
type CloudRunResourceState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// The unique ID across the whole cluster generated by Kubernetes.
	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	// The sorted list of unique IDs of the owners that depended by this resource.
	// The owner is another resource that created and managing this resource.
	OwnerIds []string `protobuf:"bytes,2,rep,name=owner_ids,json=ownerIds,proto3" json:"owner_ids,omitempty"`
	// The sorted list of unique IDs of the parents.
	ParentIds []string `protobuf:"bytes,3,rep,name=parent_ids,json=parentIds,proto3" json:"parent_ids,omitempty"`
	// The unique name for the type of resource.
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// The api version of this resource represented by "group/version".
	ApiVersion string `protobuf:"bytes,5,opt,name=api_version,json=apiVersion,proto3" json:"api_version,omitempty"`
	// The kind of this resource.
	Kind string `protobuf:"bytes,6,opt,name=kind,proto3" json:"kind,omitempty"`
	// The namespace this resource belongs to.
	// This can be empty for non-namespaced resources.
	Namespace         string                             `protobuf:"bytes,7,opt,name=namespace,proto3" json:"namespace,omitempty"`
	HealthStatus      CloudRunResourceState_HealthStatus `protobuf:"varint,8,opt,name=health_status,json=healthStatus,proto3,enum=model.CloudRunResourceState_HealthStatus" json:"health_status,omitempty"`
	HealthDescription string                             `protobuf:"bytes,9,opt,name=health_description,json=healthDescription,proto3" json:"health_description,omitempty"`
	// The timestamp when this resource was created.
	CreatedAt int64 `protobuf:"varint,14,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	// The timestamp of the last time when this resource was updated.
	UpdatedAt int64 `protobuf:"varint,15,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
}

func (x *CloudRunResourceState) Reset() {
	*x = CloudRunResourceState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_model_application_live_state_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CloudRunResourceState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloudRunResourceState) ProtoMessage() {}

func (x *CloudRunResourceState) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_model_application_live_state_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloudRunResourceState.ProtoReflect.Descriptor instead.
func (*CloudRunResourceState) Descriptor() ([]byte, []int) {
	return file_pkg_model_application_live_state_proto_rawDescGZIP(), []int{8}
}

func (x *CloudRunResourceState) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *CloudRunResourceState) GetOwnerIds() []string {
	if x != nil {
		return x.OwnerIds
	}
	return nil
}

func (x *CloudRunResourceState) GetParentIds() []string {
	if x != nil {
		return x.ParentIds
	}
	return nil
}

func (x *CloudRunResourceState) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloudRunResourceState) GetApiVersion() string {
	if x != nil {
		return x.ApiVersion
	}
	return ""
}

func (x *CloudRunResourceState) GetKind() string {
	if x != nil {
		return x.Kind
	}
	return ""
}

func (x *CloudRunResourceState) GetNamespace() string {
	if x != nil {
		return x.Namespace
	}
	return ""
}

func (x *CloudRunResourceState) GetHealthStatus() CloudRunResourceState_HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return CloudRunResourceState_UNKNOWN
}

func (x *CloudRunResourceState) GetHealthDescription() string {
	if x != nil {
		return x.HealthDescription
	}
	return ""
}

func (x *CloudRunResourceState) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *CloudRunResourceState) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

var File_pkg_model_application_live_state_proto protoreflect.FileDescriptor

var file_pkg_model_application_live_state_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x61, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x69, 0x76, 0x65, 0x5f, 0x73, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x1a,
	0x17, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61,
	0x74, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0xa5, 0x05, 0x0a, 0x1c, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x08, 0x70, 0x69, 0x70, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x70, 0x69,
	0x70, 0x65, 0x64, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x6a, 0x65, 0x63, 0x74, 0x49, 0x64, 0x12, 0x34, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4b,
	0x69, 0x6e, 0x64, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6b,
	0x69, 0x6e, 0x64, 0x12, 0x4f, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2a, 0x2e, 0x6d, 0x6f, 0x64,
	0x65, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69,
	0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x45, 0x0a, 0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74,
	0x65, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x0a, 0x6b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x12, 0x42, 0x0a, 0x09, 0x74,
	0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x52, 0x09, 0x74, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x12,
	0x3f, 0x0a, 0x08, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x75, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x23, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52,
	0x75, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52, 0x08, 0x63, 0x6c, 0x6f, 0x75, 0x64, 0x72, 0x75, 0x6e,
	0x12, 0x39, 0x0a, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x41,
	0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x52, 0x06, 0x6c, 0x61, 0x6d, 0x62, 0x64, 0x61, 0x12, 0x46, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x22, 0x2d, 0x0a, 0x06, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a,
	0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45,
	0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52,
	0x10, 0x02, 0x4a, 0x04, 0x08, 0x02, 0x10, 0x03, 0x22, 0x63, 0x0a, 0x1b, 0x41, 0x70, 0x70, 0x6c,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1d,
	0x0a, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x28, 0x00, 0x52, 0x05, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x22, 0x5e, 0x0a,
	0x1e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12,
	0x3c, 0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x52, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x1f, 0x0a,
	0x1d, 0x54, 0x65, 0x72, 0x72, 0x61, 0x66, 0x6f, 0x72, 0x6d, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x5a,
	0x0a, 0x1c, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x75, 0x6e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x3a,
	0x0a, 0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52,
	0x75, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x52,
	0x09, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x4c, 0x61,
	0x6d, 0x62, 0x64, 0x61, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x22, 0x80, 0x04, 0x0a, 0x17, 0x4b, 0x75, 0x62,
	0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x08, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1b, 0x0a, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a,
	0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6e, 0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x5a, 0x0a, 0x0d, 0x68,
	0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x2b, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72,
	0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x65, 0x2e, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74,
	0x68, 0x5f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26,
	0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01,
	0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x33, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57,
	0x4e, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x01,
	0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x22, 0x99, 0x03, 0x0a, 0x1c,
	0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x17, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2e, 0x0a, 0x0e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4b, 0x75, 0x62, 0x65,
	0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa,
	0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4b, 0x75, 0x62, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x65, 0x73, 0x52,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x42, 0x08, 0xfa, 0x42,
	0x05, 0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x57, 0x0a,
	0x10, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x76, 0x65, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x08, 0xfa, 0x42, 0x05,
	0x8a, 0x01, 0x02, 0x10, 0x01, 0x52, 0x0f, 0x73, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f, 0x74, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22,
	0x02, 0x20, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0x27,
	0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x0e, 0x41, 0x44, 0x44, 0x5f, 0x4f, 0x52,
	0x5f, 0x55, 0x50, 0x44, 0x41, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x45,
	0x4c, 0x45, 0x54, 0x45, 0x44, 0x10, 0x02, 0x22, 0xfc, 0x03, 0x0a, 0x15, 0x43, 0x6c, 0x6f, 0x75,
	0x64, 0x52, 0x75, 0x6e, 0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x65, 0x12, 0x17, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6f, 0x77,
	0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x6f,
	0x77, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x73, 0x12, 0x1b, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x28, 0x0a, 0x0b, 0x61, 0x70, 0x69, 0x5f, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10,
	0x01, 0x52, 0x0a, 0x61, 0x70, 0x69, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x1b, 0x0a,
	0x04, 0x6b, 0x69, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x04, 0x6b, 0x69, 0x6e, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6e, 0x61,
	0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6e,
	0x61, 0x6d, 0x65, 0x73, 0x70, 0x61, 0x63, 0x65, 0x12, 0x58, 0x0a, 0x0d, 0x68, 0x65, 0x61, 0x6c,
	0x74, 0x68, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x29, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6c, 0x6f, 0x75, 0x64, 0x52, 0x75, 0x6e,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x53, 0x74, 0x61, 0x74, 0x65, 0x2e, 0x48, 0x65,
	0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x2d, 0x0a, 0x12, 0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x5f, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x68, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x26, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x22, 0x02, 0x20, 0x00, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41,
	0x74, 0x22, 0x33, 0x0a, 0x0c, 0x48, 0x65, 0x61, 0x6c, 0x74, 0x68, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x0b,
	0x0a, 0x07, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48, 0x59, 0x10, 0x01, 0x12, 0x09, 0x0a, 0x05, 0x4f,
	0x54, 0x48, 0x45, 0x52, 0x10, 0x02, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x2d, 0x63, 0x64, 0x2f, 0x70, 0x69, 0x70,
	0x65, 0x63, 0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_pkg_model_application_live_state_proto_rawDescOnce sync.Once
	file_pkg_model_application_live_state_proto_rawDescData = file_pkg_model_application_live_state_proto_rawDesc
)

func file_pkg_model_application_live_state_proto_rawDescGZIP() []byte {
	file_pkg_model_application_live_state_proto_rawDescOnce.Do(func() {
		file_pkg_model_application_live_state_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_model_application_live_state_proto_rawDescData)
	})
	return file_pkg_model_application_live_state_proto_rawDescData
}

var file_pkg_model_application_live_state_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_pkg_model_application_live_state_proto_msgTypes = make([]protoimpl.MessageInfo, 9)
var file_pkg_model_application_live_state_proto_goTypes = []interface{}{
	(ApplicationLiveStateSnapshot_Status)(0),  // 0: model.ApplicationLiveStateSnapshot.Status
	(KubernetesResourceState_HealthStatus)(0), // 1: model.KubernetesResourceState.HealthStatus
	(KubernetesResourceStateEvent_Type)(0),    // 2: model.KubernetesResourceStateEvent.Type
	(CloudRunResourceState_HealthStatus)(0),   // 3: model.CloudRunResourceState.HealthStatus
	(*ApplicationLiveStateSnapshot)(nil),      // 4: model.ApplicationLiveStateSnapshot
	(*ApplicationLiveStateVersion)(nil),       // 5: model.ApplicationLiveStateVersion
	(*KubernetesApplicationLiveState)(nil),    // 6: model.KubernetesApplicationLiveState
	(*TerraformApplicationLiveState)(nil),     // 7: model.TerraformApplicationLiveState
	(*CloudRunApplicationLiveState)(nil),      // 8: model.CloudRunApplicationLiveState
	(*LambdaApplicationLiveState)(nil),        // 9: model.LambdaApplicationLiveState
	(*KubernetesResourceState)(nil),           // 10: model.KubernetesResourceState
	(*KubernetesResourceStateEvent)(nil),      // 11: model.KubernetesResourceStateEvent
	(*CloudRunResourceState)(nil),             // 12: model.CloudRunResourceState
	(ApplicationKind)(0),                      // 13: model.ApplicationKind
}
var file_pkg_model_application_live_state_proto_depIdxs = []int32{
	13, // 0: model.ApplicationLiveStateSnapshot.kind:type_name -> model.ApplicationKind
	0,  // 1: model.ApplicationLiveStateSnapshot.health_status:type_name -> model.ApplicationLiveStateSnapshot.Status
	6,  // 2: model.ApplicationLiveStateSnapshot.kubernetes:type_name -> model.KubernetesApplicationLiveState
	7,  // 3: model.ApplicationLiveStateSnapshot.terraform:type_name -> model.TerraformApplicationLiveState
	8,  // 4: model.ApplicationLiveStateSnapshot.cloudrun:type_name -> model.CloudRunApplicationLiveState
	9,  // 5: model.ApplicationLiveStateSnapshot.lambda:type_name -> model.LambdaApplicationLiveState
	5,  // 6: model.ApplicationLiveStateSnapshot.version:type_name -> model.ApplicationLiveStateVersion
	10, // 7: model.KubernetesApplicationLiveState.resources:type_name -> model.KubernetesResourceState
	12, // 8: model.CloudRunApplicationLiveState.resources:type_name -> model.CloudRunResourceState
	1,  // 9: model.KubernetesResourceState.health_status:type_name -> model.KubernetesResourceState.HealthStatus
	2,  // 10: model.KubernetesResourceStateEvent.type:type_name -> model.KubernetesResourceStateEvent.Type
	10, // 11: model.KubernetesResourceStateEvent.state:type_name -> model.KubernetesResourceState
	5,  // 12: model.KubernetesResourceStateEvent.snapshot_version:type_name -> model.ApplicationLiveStateVersion
	3,  // 13: model.CloudRunResourceState.health_status:type_name -> model.CloudRunResourceState.HealthStatus
	14, // [14:14] is the sub-list for method output_type
	14, // [14:14] is the sub-list for method input_type
	14, // [14:14] is the sub-list for extension type_name
	14, // [14:14] is the sub-list for extension extendee
	0,  // [0:14] is the sub-list for field type_name
}

func init() { file_pkg_model_application_live_state_proto_init() }
func file_pkg_model_application_live_state_proto_init() {
	if File_pkg_model_application_live_state_proto != nil {
		return
	}
	file_pkg_model_common_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_pkg_model_application_live_state_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationLiveStateSnapshot); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationLiveStateVersion); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesApplicationLiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TerraformApplicationLiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudRunApplicationLiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LambdaApplicationLiveState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesResourceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KubernetesResourceStateEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_model_application_live_state_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CloudRunResourceState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_model_application_live_state_proto_rawDesc,
			NumEnums:      4,
			NumMessages:   9,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_pkg_model_application_live_state_proto_goTypes,
		DependencyIndexes: file_pkg_model_application_live_state_proto_depIdxs,
		EnumInfos:         file_pkg_model_application_live_state_proto_enumTypes,
		MessageInfos:      file_pkg_model_application_live_state_proto_msgTypes,
	}.Build()
	File_pkg_model_application_live_state_proto = out.File
	file_pkg_model_application_live_state_proto_rawDesc = nil
	file_pkg_model_application_live_state_proto_goTypes = nil
	file_pkg_model_application_live_state_proto_depIdxs = nil
}
