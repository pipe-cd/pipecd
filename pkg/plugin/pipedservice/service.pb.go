// Copyright 2024 The PipeCD Authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.21.12
// source: pkg/plugin/pipedservice/service.proto

package pipedservice

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	model "github.com/pipe-cd/pipecd/pkg/model"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type DecryptSecretRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Secret string `protobuf:"bytes,1,opt,name=secret,proto3" json:"secret,omitempty"`
}

func (x *DecryptSecretRequest) Reset() {
	*x = DecryptSecretRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptSecretRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptSecretRequest) ProtoMessage() {}

func (x *DecryptSecretRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptSecretRequest.ProtoReflect.Descriptor instead.
func (*DecryptSecretRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{0}
}

func (x *DecryptSecretRequest) GetSecret() string {
	if x != nil {
		return x.Secret
	}
	return ""
}

type DecryptSecretResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DecryptedSecret string `protobuf:"bytes,1,opt,name=decrypted_secret,json=decryptedSecret,proto3" json:"decrypted_secret,omitempty"`
}

func (x *DecryptSecretResponse) Reset() {
	*x = DecryptSecretResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DecryptSecretResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DecryptSecretResponse) ProtoMessage() {}

func (x *DecryptSecretResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DecryptSecretResponse.ProtoReflect.Descriptor instead.
func (*DecryptSecretResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{1}
}

func (x *DecryptSecretResponse) GetDecryptedSecret() string {
	if x != nil {
		return x.DecryptedSecret
	}
	return ""
}

type InstallToolRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Name of the tool.
	Name string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	// Version of the tool.
	Version string `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	// Install script to install the tool.
	// This script is templated with the following variables:
	// - {{ .Name }}: name of the tool.
	// - {{ .Version }}: version of the tool.
	// - {{ .OutPath }}: file path where the tool will be installed.
	// - {{ .TmpDir }}: directory where the tool will be downloaded and extracted.
	// - {{ .Arch }}: GOARCH of the current machine.
	// - {{ .Os }}: GOOS of the current machine.
	//
	// The script should return 0 if the installation is successful.
	// Otherwise, it should return a non-zero value.
	//
	// The tool should be placed at {{ .OutPath }}
	// e.g.) cp path/to/kubectl {{ .OutPath }}
	// Then piped move it to the correct directory / filename and make it executable.
	InstallScript string `protobuf:"bytes,3,opt,name=install_script,json=installScript,proto3" json:"install_script,omitempty"`
}

func (x *InstallToolRequest) Reset() {
	*x = InstallToolRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallToolRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallToolRequest) ProtoMessage() {}

func (x *InstallToolRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallToolRequest.ProtoReflect.Descriptor instead.
func (*InstallToolRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{2}
}

func (x *InstallToolRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *InstallToolRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *InstallToolRequest) GetInstallScript() string {
	if x != nil {
		return x.InstallScript
	}
	return ""
}

type InstallToolResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Installed path of the tool.
	InstalledPath string `protobuf:"bytes,1,opt,name=installed_path,json=installedPath,proto3" json:"installed_path,omitempty"`
}

func (x *InstallToolResponse) Reset() {
	*x = InstallToolResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InstallToolResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InstallToolResponse) ProtoMessage() {}

func (x *InstallToolResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InstallToolResponse.ProtoReflect.Descriptor instead.
func (*InstallToolResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{3}
}

func (x *InstallToolResponse) GetInstalledPath() string {
	if x != nil {
		return x.InstalledPath
	}
	return ""
}

type ReportStageLogsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string            `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	RetriedCount int32             `protobuf:"varint,3,opt,name=retried_count,json=retriedCount,proto3" json:"retried_count,omitempty"`
	Blocks       []*model.LogBlock `protobuf:"bytes,4,rep,name=blocks,proto3" json:"blocks,omitempty"`
}

func (x *ReportStageLogsRequest) Reset() {
	*x = ReportStageLogsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStageLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStageLogsRequest) ProtoMessage() {}

func (x *ReportStageLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStageLogsRequest.ProtoReflect.Descriptor instead.
func (*ReportStageLogsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{4}
}

func (x *ReportStageLogsRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *ReportStageLogsRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ReportStageLogsRequest) GetRetriedCount() int32 {
	if x != nil {
		return x.RetriedCount
	}
	return 0
}

func (x *ReportStageLogsRequest) GetBlocks() []*model.LogBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

type ReportStageLogsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportStageLogsResponse) Reset() {
	*x = ReportStageLogsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStageLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStageLogsResponse) ProtoMessage() {}

func (x *ReportStageLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStageLogsResponse.ProtoReflect.Descriptor instead.
func (*ReportStageLogsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{5}
}

type ReportStageLogsFromLastCheckpointRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string            `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	RetriedCount int32             `protobuf:"varint,3,opt,name=retried_count,json=retriedCount,proto3" json:"retried_count,omitempty"`
	Blocks       []*model.LogBlock `protobuf:"bytes,4,rep,name=blocks,proto3" json:"blocks,omitempty"`
	Completed    bool              `protobuf:"varint,5,opt,name=completed,proto3" json:"completed,omitempty"`
}

func (x *ReportStageLogsFromLastCheckpointRequest) Reset() {
	*x = ReportStageLogsFromLastCheckpointRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStageLogsFromLastCheckpointRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStageLogsFromLastCheckpointRequest) ProtoMessage() {}

func (x *ReportStageLogsFromLastCheckpointRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStageLogsFromLastCheckpointRequest.ProtoReflect.Descriptor instead.
func (*ReportStageLogsFromLastCheckpointRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{6}
}

func (x *ReportStageLogsFromLastCheckpointRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *ReportStageLogsFromLastCheckpointRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ReportStageLogsFromLastCheckpointRequest) GetRetriedCount() int32 {
	if x != nil {
		return x.RetriedCount
	}
	return 0
}

func (x *ReportStageLogsFromLastCheckpointRequest) GetBlocks() []*model.LogBlock {
	if x != nil {
		return x.Blocks
	}
	return nil
}

func (x *ReportStageLogsFromLastCheckpointRequest) GetCompleted() bool {
	if x != nil {
		return x.Completed
	}
	return false
}

type ReportStageLogsFromLastCheckpointResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReportStageLogsFromLastCheckpointResponse) Reset() {
	*x = ReportStageLogsFromLastCheckpointResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReportStageLogsFromLastCheckpointResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportStageLogsFromLastCheckpointResponse) ProtoMessage() {}

func (x *ReportStageLogsFromLastCheckpointResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportStageLogsFromLastCheckpointResponse.ProtoReflect.Descriptor instead.
func (*ReportStageLogsFromLastCheckpointResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{7}
}

type GetStageMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	Key          string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetStageMetadataRequest) Reset() {
	*x = GetStageMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageMetadataRequest) ProtoMessage() {}

func (x *GetStageMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetStageMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{8}
}

func (x *GetStageMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *GetStageMetadataRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *GetStageMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetStageMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found bool   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *GetStageMetadataResponse) Reset() {
	*x = GetStageMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStageMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStageMetadataResponse) ProtoMessage() {}

func (x *GetStageMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStageMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetStageMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{9}
}

func (x *GetStageMetadataResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetStageMetadataResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type PutStageMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	Key          string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value        string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutStageMetadataRequest) Reset() {
	*x = PutStageMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutStageMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStageMetadataRequest) ProtoMessage() {}

func (x *PutStageMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStageMetadataRequest.ProtoReflect.Descriptor instead.
func (*PutStageMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{10}
}

func (x *PutStageMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *PutStageMetadataRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *PutStageMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutStageMetadataRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PutStageMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutStageMetadataResponse) Reset() {
	*x = PutStageMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutStageMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStageMetadataResponse) ProtoMessage() {}

func (x *PutStageMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStageMetadataResponse.ProtoReflect.Descriptor instead.
func (*PutStageMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{11}
}

type PutStageMetadataMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string            `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string            `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	Metadata     map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PutStageMetadataMultiRequest) Reset() {
	*x = PutStageMetadataMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutStageMetadataMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStageMetadataMultiRequest) ProtoMessage() {}

func (x *PutStageMetadataMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStageMetadataMultiRequest.ProtoReflect.Descriptor instead.
func (*PutStageMetadataMultiRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{12}
}

func (x *PutStageMetadataMultiRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *PutStageMetadataMultiRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *PutStageMetadataMultiRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PutStageMetadataMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutStageMetadataMultiResponse) Reset() {
	*x = PutStageMetadataMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutStageMetadataMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutStageMetadataMultiResponse) ProtoMessage() {}

func (x *PutStageMetadataMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutStageMetadataMultiResponse.ProtoReflect.Descriptor instead.
func (*PutStageMetadataMultiResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{13}
}

type GetDeploymentPluginMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Plugin name to distinguish which plugin manages the metadata.
	// e.g. "plugin-kubernetes", "plugin-wait-stage"
	PluginName string `protobuf:"bytes,2,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetDeploymentPluginMetadataRequest) Reset() {
	*x = GetDeploymentPluginMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentPluginMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentPluginMetadataRequest) ProtoMessage() {}

func (x *GetDeploymentPluginMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentPluginMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentPluginMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{14}
}

func (x *GetDeploymentPluginMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *GetDeploymentPluginMetadataRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *GetDeploymentPluginMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetDeploymentPluginMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found bool   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *GetDeploymentPluginMetadataResponse) Reset() {
	*x = GetDeploymentPluginMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentPluginMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentPluginMetadataResponse) ProtoMessage() {}

func (x *GetDeploymentPluginMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentPluginMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentPluginMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{15}
}

func (x *GetDeploymentPluginMetadataResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetDeploymentPluginMetadataResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type PutDeploymentPluginMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Plugin name to distinguish which plugin manages the metadata.
	// e.g. "plugin-kubernetes", "plugin-wait-stage"
	PluginName string `protobuf:"bytes,2,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	Key        string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	Value      string `protobuf:"bytes,4,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *PutDeploymentPluginMetadataRequest) Reset() {
	*x = PutDeploymentPluginMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDeploymentPluginMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentPluginMetadataRequest) ProtoMessage() {}

func (x *PutDeploymentPluginMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentPluginMetadataRequest.ProtoReflect.Descriptor instead.
func (*PutDeploymentPluginMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{16}
}

func (x *PutDeploymentPluginMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *PutDeploymentPluginMetadataRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *PutDeploymentPluginMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PutDeploymentPluginMetadataRequest) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type PutDeploymentPluginMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutDeploymentPluginMetadataResponse) Reset() {
	*x = PutDeploymentPluginMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDeploymentPluginMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentPluginMetadataResponse) ProtoMessage() {}

func (x *PutDeploymentPluginMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentPluginMetadataResponse.ProtoReflect.Descriptor instead.
func (*PutDeploymentPluginMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{17}
}

type PutDeploymentPluginMetadataMultiRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	// Plugin name to distinguish which plugin manages the metadata.
	// e.g. "plugin-kubernetes", "plugin-wait-stage"
	PluginName string            `protobuf:"bytes,2,opt,name=plugin_name,json=pluginName,proto3" json:"plugin_name,omitempty"`
	Metadata   map[string]string `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *PutDeploymentPluginMetadataMultiRequest) Reset() {
	*x = PutDeploymentPluginMetadataMultiRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDeploymentPluginMetadataMultiRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentPluginMetadataMultiRequest) ProtoMessage() {}

func (x *PutDeploymentPluginMetadataMultiRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentPluginMetadataMultiRequest.ProtoReflect.Descriptor instead.
func (*PutDeploymentPluginMetadataMultiRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{18}
}

func (x *PutDeploymentPluginMetadataMultiRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *PutDeploymentPluginMetadataMultiRequest) GetPluginName() string {
	if x != nil {
		return x.PluginName
	}
	return ""
}

func (x *PutDeploymentPluginMetadataMultiRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type PutDeploymentPluginMetadataMultiResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *PutDeploymentPluginMetadataMultiResponse) Reset() {
	*x = PutDeploymentPluginMetadataMultiResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PutDeploymentPluginMetadataMultiResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PutDeploymentPluginMetadataMultiResponse) ProtoMessage() {}

func (x *PutDeploymentPluginMetadataMultiResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PutDeploymentPluginMetadataMultiResponse.ProtoReflect.Descriptor instead.
func (*PutDeploymentPluginMetadataMultiResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{19}
}

type GetDeploymentSharedMetadataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	Key          string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`
}

func (x *GetDeploymentSharedMetadataRequest) Reset() {
	*x = GetDeploymentSharedMetadataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentSharedMetadataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentSharedMetadataRequest) ProtoMessage() {}

func (x *GetDeploymentSharedMetadataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentSharedMetadataRequest.ProtoReflect.Descriptor instead.
func (*GetDeploymentSharedMetadataRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{20}
}

func (x *GetDeploymentSharedMetadataRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *GetDeploymentSharedMetadataRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

type GetDeploymentSharedMetadataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value string `protobuf:"bytes,1,opt,name=value,proto3" json:"value,omitempty"`
	Found bool   `protobuf:"varint,2,opt,name=found,proto3" json:"found,omitempty"`
}

func (x *GetDeploymentSharedMetadataResponse) Reset() {
	*x = GetDeploymentSharedMetadataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDeploymentSharedMetadataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDeploymentSharedMetadataResponse) ProtoMessage() {}

func (x *GetDeploymentSharedMetadataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDeploymentSharedMetadataResponse.ProtoReflect.Descriptor instead.
func (*GetDeploymentSharedMetadataResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{21}
}

func (x *GetDeploymentSharedMetadataResponse) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

func (x *GetDeploymentSharedMetadataResponse) GetFound() bool {
	if x != nil {
		return x.Found
	}
	return false
}

type ListStageCommandsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeploymentId string             `protobuf:"bytes,1,opt,name=deployment_id,json=deploymentId,proto3" json:"deployment_id,omitempty"`
	StageId      string             `protobuf:"bytes,2,opt,name=stage_id,json=stageId,proto3" json:"stage_id,omitempty"`
	Type         model.Command_Type `protobuf:"varint,3,opt,name=type,proto3,enum=model.Command_Type" json:"type,omitempty"`
}

func (x *ListStageCommandsRequest) Reset() {
	*x = ListStageCommandsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStageCommandsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStageCommandsRequest) ProtoMessage() {}

func (x *ListStageCommandsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStageCommandsRequest.ProtoReflect.Descriptor instead.
func (*ListStageCommandsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{22}
}

func (x *ListStageCommandsRequest) GetDeploymentId() string {
	if x != nil {
		return x.DeploymentId
	}
	return ""
}

func (x *ListStageCommandsRequest) GetStageId() string {
	if x != nil {
		return x.StageId
	}
	return ""
}

func (x *ListStageCommandsRequest) GetType() model.Command_Type {
	if x != nil {
		return x.Type
	}
	return model.Command_Type(0)
}

type ListStageCommandsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Commands []*model.Command `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`
}

func (x *ListStageCommandsResponse) Reset() {
	*x = ListStageCommandsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListStageCommandsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListStageCommandsResponse) ProtoMessage() {}

func (x *ListStageCommandsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_plugin_pipedservice_service_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListStageCommandsResponse.ProtoReflect.Descriptor instead.
func (*ListStageCommandsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_plugin_pipedservice_service_proto_rawDescGZIP(), []int{23}
}

func (x *ListStageCommandsResponse) GetCommands() []*model.Command {
	if x != nil {
		return x.Commands
	}
	return nil
}

var File_pkg_plugin_pipedservice_service_proto protoreflect.FileDescriptor

var file_pkg_plugin_pipedservice_service_proto_rawDesc = []byte{
	0x0a, 0x25, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69,
	0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x1a, 0x17, 0x76, 0x61, 0x6c,
	0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x18, 0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f,
	0x6c, 0x6f, 0x67, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17,
	0x70, 0x6b, 0x67, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e,
	0x64, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x37, 0x0a, 0x14, 0x44, 0x65, 0x63, 0x72, 0x79,
	0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x1f, 0x0a, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x06, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x22, 0x42, 0x0a, 0x15, 0x44, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x53, 0x65, 0x63, 0x72, 0x65,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x10, 0x64, 0x65, 0x63,
	0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x63, 0x72, 0x79, 0x70, 0x74, 0x65, 0x64, 0x53, 0x65,
	0x63, 0x72, 0x65, 0x74, 0x22, 0x84, 0x01, 0x0a, 0x12, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c,
	0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02,
	0x10, 0x01, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x0e, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x5f, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0d, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6c, 0x6c, 0x53, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x3c, 0x0a, 0x13, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x5f,
	0x70, 0x61, 0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x73, 0x74,
	0x61, 0x6c, 0x6c, 0x65, 0x64, 0x50, 0x61, 0x74, 0x68, 0x22, 0xb8, 0x01, 0x0a, 0x16, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65,
	0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72,
	0x65, 0x74, 0x72, 0x69, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x62,
	0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x73, 0x22, 0x19, 0x0a, 0x17, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xe8, 0x01, 0x0a, 0x28, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x23,
	0x0a, 0x0d, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x72, 0x65, 0x74, 0x72, 0x69, 0x65, 0x64, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x27, 0x0a, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x4c, 0x6f, 0x67, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x52, 0x06, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x73, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x22, 0x2b, 0x0a, 0x29, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x72, 0x6f,
	0x6d, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x86, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74,
	0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x22, 0x46, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x9c, 0x01, 0x0a, 0x17, 0x50, 0x75, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x50, 0x75, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x89, 0x02, 0x0a, 0x1c, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04,
	0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x49, 0x64, 0x12, 0x22, 0x0a, 0x08, 0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73,
	0x74, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x5a, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x3e, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75,
	0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x1f, 0x0a, 0x1d, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x8e, 0x01, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67,
	0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x22, 0x51, 0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65,
	0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x66, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0xad, 0x01, 0x0a, 0x22, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c,
	0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64,
	0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x70, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x25, 0x0a, 0x23, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0xa5, 0x02, 0x0a, 0x27,
	0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x0a, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x65, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x49, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a,
	0x02, 0x38, 0x01, 0x22, 0x2a, 0x0a, 0x28, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x6d, 0x0a, 0x22, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c, 0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42,
	0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e,
	0x74, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x22, 0x51,
	0x0a, 0x23, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x66,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x66, 0x6f, 0x75, 0x6e,
	0x64, 0x22, 0x9f, 0x01, 0x0a, 0x18, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x2c,
	0x0a, 0x0d, 0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0c,
	0x64, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07,
	0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x73, 0x74, 0x61, 0x67, 0x65, 0x49, 0x64,
	0x12, 0x31, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x2e, 0x54,
	0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x10, 0x01, 0x52, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x22, 0x47, 0x0a, 0x19, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x2a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x32, 0xb5, 0x0b, 0x0a,
	0x0d, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x60,
	0x0a, 0x0b, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x6c, 0x12, 0x26, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x27, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x49, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x54, 0x6f, 0x6f, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x6c, 0x0a, 0x0f, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c,
	0x6f, 0x67, 0x73, 0x12, 0x2a, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x2b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4c, 0x6f, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0xa2,
	0x01, 0x0a, 0x21, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f,
	0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x12, 0x3c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x3d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4c, 0x6f, 0x67, 0x73, 0x46, 0x72, 0x6f, 0x6d, 0x4c, 0x61, 0x73, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70,
	0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74,
	0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65,
	0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x12, 0x6f, 0x0a, 0x10, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75,
	0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74,
	0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x7e, 0x0a, 0x15, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67,
	0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x12, 0x30,
	0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x31, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70,
	0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01, 0x0a, 0x1b, 0x50, 0x75, 0x74,
	0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e,
	0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75,
	0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69,
	0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x37, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x9f, 0x01, 0x0a, 0x20,
	0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75,
	0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x12, 0x3b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d,
	0x65, 0x6e, 0x74, 0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x3c, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x50, 0x75, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x50, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x4d, 0x75,
	0x6c, 0x74, 0x69, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x90, 0x01,
	0x0a, 0x1b, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x36, 0x2e,
	0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65, 0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x37, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x44, 0x65,
	0x70, 0x6c, 0x6f, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x12, 0x72, 0x0a, 0x11, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d,
	0x6d, 0x61, 0x6e, 0x64, 0x73, 0x12, 0x2c, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53,
	0x74, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x2d, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x69, 0x70, 0x65, 0x64,
	0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x74, 0x61,
	0x67, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x61, 0x6e, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0x00, 0x42, 0x33, 0x5a, 0x31, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63,
	0x6f, 0x6d, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x2d, 0x63, 0x64, 0x2f, 0x70, 0x69, 0x70, 0x65, 0x63,
	0x64, 0x2f, 0x70, 0x6b, 0x67, 0x2f, 0x70, 0x6c, 0x75, 0x67, 0x69, 0x6e, 0x2f, 0x70, 0x69, 0x70,
	0x65, 0x64, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_pkg_plugin_pipedservice_service_proto_rawDescOnce sync.Once
	file_pkg_plugin_pipedservice_service_proto_rawDescData = file_pkg_plugin_pipedservice_service_proto_rawDesc
)

func file_pkg_plugin_pipedservice_service_proto_rawDescGZIP() []byte {
	file_pkg_plugin_pipedservice_service_proto_rawDescOnce.Do(func() {
		file_pkg_plugin_pipedservice_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_pkg_plugin_pipedservice_service_proto_rawDescData)
	})
	return file_pkg_plugin_pipedservice_service_proto_rawDescData
}

var file_pkg_plugin_pipedservice_service_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_pkg_plugin_pipedservice_service_proto_goTypes = []interface{}{
	(*DecryptSecretRequest)(nil),                      // 0: grpc.piped.service.DecryptSecretRequest
	(*DecryptSecretResponse)(nil),                     // 1: grpc.piped.service.DecryptSecretResponse
	(*InstallToolRequest)(nil),                        // 2: grpc.piped.service.InstallToolRequest
	(*InstallToolResponse)(nil),                       // 3: grpc.piped.service.InstallToolResponse
	(*ReportStageLogsRequest)(nil),                    // 4: grpc.piped.service.ReportStageLogsRequest
	(*ReportStageLogsResponse)(nil),                   // 5: grpc.piped.service.ReportStageLogsResponse
	(*ReportStageLogsFromLastCheckpointRequest)(nil),  // 6: grpc.piped.service.ReportStageLogsFromLastCheckpointRequest
	(*ReportStageLogsFromLastCheckpointResponse)(nil), // 7: grpc.piped.service.ReportStageLogsFromLastCheckpointResponse
	(*GetStageMetadataRequest)(nil),                   // 8: grpc.piped.service.GetStageMetadataRequest
	(*GetStageMetadataResponse)(nil),                  // 9: grpc.piped.service.GetStageMetadataResponse
	(*PutStageMetadataRequest)(nil),                   // 10: grpc.piped.service.PutStageMetadataRequest
	(*PutStageMetadataResponse)(nil),                  // 11: grpc.piped.service.PutStageMetadataResponse
	(*PutStageMetadataMultiRequest)(nil),              // 12: grpc.piped.service.PutStageMetadataMultiRequest
	(*PutStageMetadataMultiResponse)(nil),             // 13: grpc.piped.service.PutStageMetadataMultiResponse
	(*GetDeploymentPluginMetadataRequest)(nil),        // 14: grpc.piped.service.GetDeploymentPluginMetadataRequest
	(*GetDeploymentPluginMetadataResponse)(nil),       // 15: grpc.piped.service.GetDeploymentPluginMetadataResponse
	(*PutDeploymentPluginMetadataRequest)(nil),        // 16: grpc.piped.service.PutDeploymentPluginMetadataRequest
	(*PutDeploymentPluginMetadataResponse)(nil),       // 17: grpc.piped.service.PutDeploymentPluginMetadataResponse
	(*PutDeploymentPluginMetadataMultiRequest)(nil),   // 18: grpc.piped.service.PutDeploymentPluginMetadataMultiRequest
	(*PutDeploymentPluginMetadataMultiResponse)(nil),  // 19: grpc.piped.service.PutDeploymentPluginMetadataMultiResponse
	(*GetDeploymentSharedMetadataRequest)(nil),        // 20: grpc.piped.service.GetDeploymentSharedMetadataRequest
	(*GetDeploymentSharedMetadataResponse)(nil),       // 21: grpc.piped.service.GetDeploymentSharedMetadataResponse
	(*ListStageCommandsRequest)(nil),                  // 22: grpc.piped.service.ListStageCommandsRequest
	(*ListStageCommandsResponse)(nil),                 // 23: grpc.piped.service.ListStageCommandsResponse
	nil,                                               // 24: grpc.piped.service.PutStageMetadataMultiRequest.MetadataEntry
	nil,                                               // 25: grpc.piped.service.PutDeploymentPluginMetadataMultiRequest.MetadataEntry
	(*model.LogBlock)(nil),                            // 26: model.LogBlock
	(model.Command_Type)(0),                           // 27: model.Command.Type
	(*model.Command)(nil),                             // 28: model.Command
}
var file_pkg_plugin_pipedservice_service_proto_depIdxs = []int32{
	26, // 0: grpc.piped.service.ReportStageLogsRequest.blocks:type_name -> model.LogBlock
	26, // 1: grpc.piped.service.ReportStageLogsFromLastCheckpointRequest.blocks:type_name -> model.LogBlock
	24, // 2: grpc.piped.service.PutStageMetadataMultiRequest.metadata:type_name -> grpc.piped.service.PutStageMetadataMultiRequest.MetadataEntry
	25, // 3: grpc.piped.service.PutDeploymentPluginMetadataMultiRequest.metadata:type_name -> grpc.piped.service.PutDeploymentPluginMetadataMultiRequest.MetadataEntry
	27, // 4: grpc.piped.service.ListStageCommandsRequest.type:type_name -> model.Command.Type
	28, // 5: grpc.piped.service.ListStageCommandsResponse.commands:type_name -> model.Command
	2,  // 6: grpc.piped.service.PluginService.InstallTool:input_type -> grpc.piped.service.InstallToolRequest
	4,  // 7: grpc.piped.service.PluginService.ReportStageLogs:input_type -> grpc.piped.service.ReportStageLogsRequest
	6,  // 8: grpc.piped.service.PluginService.ReportStageLogsFromLastCheckpoint:input_type -> grpc.piped.service.ReportStageLogsFromLastCheckpointRequest
	8,  // 9: grpc.piped.service.PluginService.GetStageMetadata:input_type -> grpc.piped.service.GetStageMetadataRequest
	10, // 10: grpc.piped.service.PluginService.PutStageMetadata:input_type -> grpc.piped.service.PutStageMetadataRequest
	12, // 11: grpc.piped.service.PluginService.PutStageMetadataMulti:input_type -> grpc.piped.service.PutStageMetadataMultiRequest
	14, // 12: grpc.piped.service.PluginService.GetDeploymentPluginMetadata:input_type -> grpc.piped.service.GetDeploymentPluginMetadataRequest
	16, // 13: grpc.piped.service.PluginService.PutDeploymentPluginMetadata:input_type -> grpc.piped.service.PutDeploymentPluginMetadataRequest
	18, // 14: grpc.piped.service.PluginService.PutDeploymentPluginMetadataMulti:input_type -> grpc.piped.service.PutDeploymentPluginMetadataMultiRequest
	20, // 15: grpc.piped.service.PluginService.GetDeploymentSharedMetadata:input_type -> grpc.piped.service.GetDeploymentSharedMetadataRequest
	22, // 16: grpc.piped.service.PluginService.ListStageCommands:input_type -> grpc.piped.service.ListStageCommandsRequest
	3,  // 17: grpc.piped.service.PluginService.InstallTool:output_type -> grpc.piped.service.InstallToolResponse
	5,  // 18: grpc.piped.service.PluginService.ReportStageLogs:output_type -> grpc.piped.service.ReportStageLogsResponse
	7,  // 19: grpc.piped.service.PluginService.ReportStageLogsFromLastCheckpoint:output_type -> grpc.piped.service.ReportStageLogsFromLastCheckpointResponse
	9,  // 20: grpc.piped.service.PluginService.GetStageMetadata:output_type -> grpc.piped.service.GetStageMetadataResponse
	11, // 21: grpc.piped.service.PluginService.PutStageMetadata:output_type -> grpc.piped.service.PutStageMetadataResponse
	13, // 22: grpc.piped.service.PluginService.PutStageMetadataMulti:output_type -> grpc.piped.service.PutStageMetadataMultiResponse
	15, // 23: grpc.piped.service.PluginService.GetDeploymentPluginMetadata:output_type -> grpc.piped.service.GetDeploymentPluginMetadataResponse
	17, // 24: grpc.piped.service.PluginService.PutDeploymentPluginMetadata:output_type -> grpc.piped.service.PutDeploymentPluginMetadataResponse
	19, // 25: grpc.piped.service.PluginService.PutDeploymentPluginMetadataMulti:output_type -> grpc.piped.service.PutDeploymentPluginMetadataMultiResponse
	21, // 26: grpc.piped.service.PluginService.GetDeploymentSharedMetadata:output_type -> grpc.piped.service.GetDeploymentSharedMetadataResponse
	23, // 27: grpc.piped.service.PluginService.ListStageCommands:output_type -> grpc.piped.service.ListStageCommandsResponse
	17, // [17:28] is the sub-list for method output_type
	6,  // [6:17] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_pkg_plugin_pipedservice_service_proto_init() }
func file_pkg_plugin_pipedservice_service_proto_init() {
	if File_pkg_plugin_pipedservice_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_pkg_plugin_pipedservice_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptSecretRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DecryptSecretResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallToolRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InstallToolResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStageLogsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStageLogsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStageLogsFromLastCheckpointRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReportStageLogsFromLastCheckpointResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStageMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutStageMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutStageMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutStageMetadataMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutStageMetadataMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentPluginMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentPluginMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDeploymentPluginMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDeploymentPluginMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDeploymentPluginMetadataMultiRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PutDeploymentPluginMetadataMultiResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentSharedMetadataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDeploymentSharedMetadataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStageCommandsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_pkg_plugin_pipedservice_service_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListStageCommandsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_pkg_plugin_pipedservice_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_pkg_plugin_pipedservice_service_proto_goTypes,
		DependencyIndexes: file_pkg_plugin_pipedservice_service_proto_depIdxs,
		MessageInfos:      file_pkg_plugin_pipedservice_service_proto_msgTypes,
	}.Build()
	File_pkg_plugin_pipedservice_service_proto = out.File
	file_pkg_plugin_pipedservice_service_proto_rawDesc = nil
	file_pkg_plugin_pipedservice_service_proto_goTypes = nil
	file_pkg_plugin_pipedservice_service_proto_depIdxs = nil
}
