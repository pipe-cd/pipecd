name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  backend:
    name: Backend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.17.6'

      - name: Build pipecd binary
        run: GOOS=linux GOARCH=amd64 go build -o ./.artifacts/pipecd ./cmd/pipecd
      - name: Build piped binary
        run: GOOS=linux GOARCH=amd64 go build -o ./.artifacts/piped ./cmd/piped
      - name: Build launcher binary
        run: GOOS=linux GOARCH=amd64 go build -o ./.artifacts/launcher ./cmd/launcher
      - name: Build pipectl binary
        run: GOOS=linux GOARCH=amd64 go build -o ./.artifacts/pipectl ./cmd/pipectl
      - name: Build helloworld binary
        run: GOOS=linux GOARCH=amd64 go build -o ./.artifacts/helloworld ./cmd/helloworld

  frontend:
    name: Frontend
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '16.13.0'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Yarn install
        working-directory: web
        run: yarn install --prefer-offline
      - name: Build web static
        run: make web-build

  chart:
    name: Helm Chart
    runs-on: ubuntu-latest
    env:
      HELM_VERSION: 3.8.2
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Install helm
        uses: Azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}
      - name: Package pipecd chart
        run: make package-chart CHART=pipecd
      - name: Package piped chart
        run: make package-chart CHART=piped
