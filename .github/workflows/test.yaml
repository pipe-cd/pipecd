name: test

on:
  push:
    branches:
      - master
    tags:
      - 'v*'
  pull_request:
    branches:
      - master
      - 'release-v*'
      - 'feat/*'

env:
  GO_VERSION: 1.24.1
  NODE_VERSION: 18.12.0

jobs:
  list-go-modules:
    runs-on: ubuntu-24.04
    outputs:
      modules: ${{ steps.list-go-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v3
      - name: List go modules
        id: list-go-modules
        run: |
          echo "modules=$(find . -name go.mod -exec dirname {} \; | sort | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT

  go:
    runs-on: ubuntu-latest-8-cores
    needs: list-go-modules
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.list-go-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run unit tests
        run: make test/go COVERAGE=true MODULES=${{ matrix.module }}
      - name: make flag
        id: make-flag
        run: |
          echo "flags=$(echo ${{ matrix.module }} | tr '/' '-')" >> $GITHUB_OUTPUT
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v3
        with:
          flags: ${{ steps.make-flag.outputs.flags }}
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

  # This job is used to check if the go testing is completed successfully
  # It is used to set as required check for the branch protection rules
  go-test-completed:
    runs-on: ubuntu-24.04
    needs: go
    steps:
      - run: |
          echo completed

  web:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Update web dependencies
        run: make update/web-deps
      - name: Run unit tests
        run: make test/web

  integration:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Run integration tests
        run: make test/integration
