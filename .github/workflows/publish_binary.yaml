name: publish

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: 1.22.4
  HELM_VERSION: 3.8.2

jobs:
  gh_release:
    runs-on: ubuntu-latest
    steps:
      - run: echo "not implemented"

  binary:
    runs-on: ubuntu-latest
    needs: gh_release
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v3
        with:
          go-version: ${{ env.GO_VERSION }}
          cache: true
      - name: Determine version
        run: echo "PIPECD_VERSION=$(git describe --tags --always --abbrev=7)" >> $GITHUB_ENV

      - name: Build binary artifacts
        run: |
          make build/go MOD=piped BUILD_OS=linux BUILD_ARCH=amd64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_linux_amd64
          make build/go MOD=piped BUILD_OS=linux BUILD_ARCH=arm64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_linux_arm64
          make build/go MOD=piped BUILD_OS=darwin BUILD_ARCH=amd64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_darwin_amd64
          make build/go MOD=piped BUILD_OS=darwin BUILD_ARCH=arm64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_darwin_arm64
          make build/go MOD=pipectl BUILD_OS=linux BUILD_ARCH=amd64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_linux_amd64
          make build/go MOD=pipectl BUILD_OS=linux BUILD_ARCH=arm64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_linux_arm64
          make build/go MOD=pipectl BUILD_OS=darwin BUILD_ARCH=amd64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_darwin_amd64
          make build/go MOD=pipectl BUILD_OS=darwin BUILD_ARCH=arm64 BIN_SUFFIX=_${{ env.PIPECD_VERSION }}_darwin_arm64

      - name: Publish binary artifacts
        uses: softprops/action-gh-release@1e07f4398721186383de40550babbdf2b84acfc5 #v0.1.14
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            ./.artifacts/piped_${{ env.PIPECD_VERSION }}_linux_amd64
            ./.artifacts/piped_${{ env.PIPECD_VERSION }}_linux_arm64
            ./.artifacts/piped_${{ env.PIPECD_VERSION }}_darwin_amd64
            ./.artifacts/piped_${{ env.PIPECD_VERSION }}_darwin_arm64
            ./.artifacts/pipectl_${{ env.PIPECD_VERSION }}_linux_amd64
            ./.artifacts/pipectl_${{ env.PIPECD_VERSION }}_linux_arm64
            ./.artifacts/pipectl_${{ env.PIPECD_VERSION }}_darwin_amd64
            ./.artifacts/pipectl_${{ env.PIPECD_VERSION }}_darwin_arm64

      # Building and publishing quickstart manifests.
      - name: Install Helm
        uses: Azure/setup-helm@v1
        with:
          version: ${{ env.HELM_VERSION }}
      - name: Build quickstart manifests
        run: |
          helm template pipecd oci://ghcr.io/pipe-cd/chart/pipecd --version ${{ env.PIPECD_VERSION }} -n pipecd -f quickstart/control-plane-values.yaml > quickstart/manifests/control-plane.yaml
          helm template piped oci://ghcr.io/pipe-cd/chart/piped --version ${{ env.PIPECD_VERSION }} -n pipecd --set quickstart.enabled=true --set quickstart.pipedId=\<YOUR_PIPED_ID\> --set quickstart.pipedKeyData=\<YOUR_PIPED_KEY_DATA\> > quickstart/manifests/piped.yaml
      - name: Publish quickstart manifests
        uses: peter-evans/create-pull-request@v6
        with:
          title: "[bot] Publish quickstart manifests"
          commit-message: "[bot] Publish quickstart manifests"
          branch: "create-pull-request/publish-quickstart-manifests"
          body: |
            Automated changes by [create-pull-request](https://github.com/peter-evans/create-pull-request) GitHub action.
            The workflow is defined [here](https://github.com/pipe-cd/pipecd/blob/master/.github/workflows/publish_binary.yaml).

            **Note:** You need to **close and reopen this PR** manually to trigger status check workflows. (Or just click `Update branch` if possible.)
            For details, see https://github.com/peter-evans/create-pull-request/blob/main/docs/concepts-guidelines.md#triggering-further-workflow-runs.
          delete-branch: true
          signoff: true
          token: ${{ secrets.GITHUB_TOKEN }}
