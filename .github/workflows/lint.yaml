name: lint

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
      - 'release-v*'
      - 'feat/*'

env:
  GO_VERSION: 1.24.1
  NODE_VERSION: 18.12.0
  GOLANGCI_LINT_VERSION: v1.64.7
  HELM_VERSION: 3.17.3

jobs:
  list-go-modules:
    runs-on: ubuntu-24.04
    outputs:
      modules: ${{ steps.list-go-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v3
      - name: List go modules
        id: list-go-modules
        run: |
          echo "modules=$(find . -name go.mod -exec dirname {} \; | sort | jq -R -s -c 'split("\n") | map(select(length > 0))')" >> $GITHUB_OUTPUT

  go:
    runs-on: ubuntu-24.04
    needs: list-go-modules
    strategy:
      fail-fast: false
      matrix:
        module: ${{ fromJSON(needs.list-go-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@f3dc5fadcaff5d8da3574b129a58db433171b1a8 #v2.1.3
        with:
          workdir: ${{ matrix.module }}
          go_version: ${{ env.GO_VERSION }}
          golangci_lint_version: ${{ env.GOLANGCI_LINT_VERSION }}
          golangci_lint_flags: --config ${{ github.workspace }}/.golangci.yml
          fail_on_error: true # this option is deprecated on v2.7.0, but we use v2.1.3, so it's still available

  # This job is used to check if the go linting is completed successfully
  # It is used to set as required check for the branch protection rules
  go-lint-completed:
    runs-on: ubuntu-24.04
    needs: go
    steps:
      - run: |
          echo completed

  web:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Update web dependencies
        run: make update/web-deps
      - name: Run lint
        run: make lint/web
  helm:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Helm
        uses: azure/setup-helm@v4
        with:
          version: ${{ env.HELM_VERSION }}

      - name: Lint all Helm charts
        run: make lint/helm
