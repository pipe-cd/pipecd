name: check for non-maintainers

on:
  pull_request_target:
    branches: [ master ]
    types: [ opened ]
  issue_comment:
    types: [ created ]

jobs:
  greeting:
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    if: >-
      (github.event_name == 'pull_request_target') &&
      (github.event.pull_request.author_association != 'COLLABORATOR') &&
      (github.event.pull_request.author_association != 'MANNEQUIN') &&
      (github.event.pull_request.author_association != 'MEMBER') &&
      (github.event.pull_request.author_association != 'OWNER')
    steps:
    - name: Greeting
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        AUTHOR: ${{ github.event.pull_request.user.login }}
        REPO_NAME: ${{ github.event.repository.full_name }}
        PR_NUMBER: ${{ github.event.pull_request.number }}
        TEMP_DIR: ${{ runner.temp }}
      run: |
        # sometimes the author association of event payload is not correct to handle it
        # so we fetch the latest author association from the API
        AUTHOR_ASSOCIATION=$(gh api "/repos/${REPO_NAME}/pulls/${PR_NUMBER}" --jq '.author_association')
        echo "AUTHOR_ASSOCIATION: ${AUTHOR_ASSOCIATION}"
        [ "${AUTHOR_ASSOCIATION}" = "COLLABORATOR" ] && exit 0
        [ "${AUTHOR_ASSOCIATION}" = "MANNEQUIN" ] && exit 0
        [ "${AUTHOR_ASSOCIATION}" = "MEMBER" ] && exit 0
        [ "${AUTHOR_ASSOCIATION}" = "OWNER" ] && exit 0

        echo "@${AUTHOR}" > "${TEMP_DIR}/greeting.md"

        cat <<'EOF' >> "${TEMP_DIR}/greeting.md"
        Thank you for your contribution! We look forward to seeing more from you.
        Please run the `make check` command to ensure your changes will pass the CI.
        After successfully running the command on your local machine, the instructions will be printed out.
        Please follow them to commit your changes.
        If the check has not passed, please fix the issues and push the changes to your branch.
        Then, please run the `make check` command again to ensure the issues are fixed.
        EOF

        gh --repo "${REPO_NAME}" pr comment "${PR_NUMBER}" --body-file "${TEMP_DIR}/greeting.md"

  check:
    if: github.event_name == 'issue_comment' && startsWith(github.event.comment.body, '/check-commit')
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
    steps:
      - name: Check if the hash is valid
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMENT_BODY: ${{ github.event.comment.body }}
          REPO_NAME: ${{ github.event.repository.full_name }}
          PR_NUMBER: ${{ github.event.issue.number }}
          TEMP_DIR: ${{ runner.temp }}
        run: |
          COMMENT_HASH=$(echo "${COMMENT_BODY}" | cut -d' ' -f2)
          if [ -z "${COMMENT_HASH}" ]; then
            echo "No hash provided"
            exit 1
          fi

          PR="$(gh api "/repos/${REPO_NAME}/pulls/${PR_NUMBER}")"
          AUTHOR="$(echo "$PR" | jq -r '.user.login')"
          HEAD_SHA="$(echo "$PR" | jq -r '.head.sha')"
          HEAD_REF="$(echo "$PR" | jq -r '.head.ref')"

          EXPECTED_HASH="$(echo "$HEAD_REF/$HEAD_SHA" | sha256sum | cut -d' ' -f1)"

          if [ "${COMMENT_HASH}" != "${EXPECTED_HASH}" ]; then
            echo "Invalid hash"
            exit 1
          fi

          echo "Valid hash"

          cat <<EOF > "${TEMP_DIR}/comment.md"
          @${AUTHOR}
          The check has passed.
          Thank you for your contribution!
          EOF

          gh --repo "${REPO_NAME}" pr comment "${PR_NUMBER}" --body-file "${TEMP_DIR}/comment.md"
