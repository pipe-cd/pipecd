// source: pkg/model/command.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();



var pkg_model_common_pb = require('pipecd/web/model/common_pb.js');
goog.object.extend(proto, pkg_model_common_pb);
goog.exportSymbol('proto.model.Command', null, global);
goog.exportSymbol('proto.model.Command.ApproveStage', null, global);
goog.exportSymbol('proto.model.Command.BuildPlanPreview', null, global);
goog.exportSymbol('proto.model.Command.CancelDeployment', null, global);
goog.exportSymbol('proto.model.Command.ChainSyncApplication', null, global);
goog.exportSymbol('proto.model.Command.RestartPiped', null, global);
goog.exportSymbol('proto.model.Command.SkipStage', null, global);
goog.exportSymbol('proto.model.Command.SyncApplication', null, global);
goog.exportSymbol('proto.model.Command.Type', null, global);
goog.exportSymbol('proto.model.Command.UpdateApplicationConfig', null, global);
goog.exportSymbol('proto.model.CommandStatus', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.displayName = 'proto.model.Command';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.SyncApplication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.SyncApplication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.SyncApplication.displayName = 'proto.model.Command.SyncApplication';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.UpdateApplicationConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.UpdateApplicationConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.UpdateApplicationConfig.displayName = 'proto.model.Command.UpdateApplicationConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.CancelDeployment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.CancelDeployment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.CancelDeployment.displayName = 'proto.model.Command.CancelDeployment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.ApproveStage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.ApproveStage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.ApproveStage.displayName = 'proto.model.Command.ApproveStage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.BuildPlanPreview = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.BuildPlanPreview, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.BuildPlanPreview.displayName = 'proto.model.Command.BuildPlanPreview';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.ChainSyncApplication = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.ChainSyncApplication, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.ChainSyncApplication.displayName = 'proto.model.Command.ChainSyncApplication';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.SkipStage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.SkipStage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.SkipStage.displayName = 'proto.model.Command.SkipStage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Command.RestartPiped = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Command.RestartPiped, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Command.RestartPiped.displayName = 'proto.model.Command.RestartPiped';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pipedId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    deploymentId: jspb.Message.getFieldWithDefault(msg, 4, ""),
    stageId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    commander: jspb.Message.getFieldWithDefault(msg, 6, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 7, ""),
    status: jspb.Message.getFieldWithDefault(msg, 20, 0),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    handledAt: jspb.Message.getFieldWithDefault(msg, 22, 0),
    type: jspb.Message.getFieldWithDefault(msg, 30, 0),
    syncApplication: (f = msg.getSyncApplication()) && proto.model.Command.SyncApplication.toObject(includeInstance, f),
    updateApplicationConfig: (f = msg.getUpdateApplicationConfig()) && proto.model.Command.UpdateApplicationConfig.toObject(includeInstance, f),
    cancelDeployment: (f = msg.getCancelDeployment()) && proto.model.Command.CancelDeployment.toObject(includeInstance, f),
    approveStage: (f = msg.getApproveStage()) && proto.model.Command.ApproveStage.toObject(includeInstance, f),
    buildPlanPreview: (f = msg.getBuildPlanPreview()) && proto.model.Command.BuildPlanPreview.toObject(includeInstance, f),
    chainSyncApplication: (f = msg.getChainSyncApplication()) && proto.model.Command.ChainSyncApplication.toObject(includeInstance, f),
    skipStage: (f = msg.getSkipStage()) && proto.model.Command.SkipStage.toObject(includeInstance, f),
    restartPiped: (f = msg.getRestartPiped()) && proto.model.Command.RestartPiped.toObject(includeInstance, f),
    createdAt: jspb.Message.getFieldWithDefault(msg, 100, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 101, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command}
 */
proto.model.Command.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command;
  return proto.model.Command.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command}
 */
proto.model.Command.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPipedId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentId(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommander(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 20:
      var value = /** @type {!proto.model.CommandStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 21:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 22:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setHandledAt(value);
      break;
    case 30:
      var value = /** @type {!proto.model.Command.Type} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 31:
      var value = new proto.model.Command.SyncApplication;
      reader.readMessage(value,proto.model.Command.SyncApplication.deserializeBinaryFromReader);
      msg.setSyncApplication(value);
      break;
    case 32:
      var value = new proto.model.Command.UpdateApplicationConfig;
      reader.readMessage(value,proto.model.Command.UpdateApplicationConfig.deserializeBinaryFromReader);
      msg.setUpdateApplicationConfig(value);
      break;
    case 33:
      var value = new proto.model.Command.CancelDeployment;
      reader.readMessage(value,proto.model.Command.CancelDeployment.deserializeBinaryFromReader);
      msg.setCancelDeployment(value);
      break;
    case 34:
      var value = new proto.model.Command.ApproveStage;
      reader.readMessage(value,proto.model.Command.ApproveStage.deserializeBinaryFromReader);
      msg.setApproveStage(value);
      break;
    case 35:
      var value = new proto.model.Command.BuildPlanPreview;
      reader.readMessage(value,proto.model.Command.BuildPlanPreview.deserializeBinaryFromReader);
      msg.setBuildPlanPreview(value);
      break;
    case 36:
      var value = new proto.model.Command.ChainSyncApplication;
      reader.readMessage(value,proto.model.Command.ChainSyncApplication.deserializeBinaryFromReader);
      msg.setChainSyncApplication(value);
      break;
    case 37:
      var value = new proto.model.Command.SkipStage;
      reader.readMessage(value,proto.model.Command.SkipStage.deserializeBinaryFromReader);
      msg.setSkipStage(value);
      break;
    case 38:
      var value = new proto.model.Command.RestartPiped;
      reader.readMessage(value,proto.model.Command.RestartPiped.deserializeBinaryFromReader);
      msg.setRestartPiped(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPipedId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getDeploymentId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getStageId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getCommander();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      20,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(21, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getHandledAt();
  if (f !== 0) {
    writer.writeInt64(
      22,
      f
    );
  }
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getSyncApplication();
  if (f != null) {
    writer.writeMessage(
      31,
      f,
      proto.model.Command.SyncApplication.serializeBinaryToWriter
    );
  }
  f = message.getUpdateApplicationConfig();
  if (f != null) {
    writer.writeMessage(
      32,
      f,
      proto.model.Command.UpdateApplicationConfig.serializeBinaryToWriter
    );
  }
  f = message.getCancelDeployment();
  if (f != null) {
    writer.writeMessage(
      33,
      f,
      proto.model.Command.CancelDeployment.serializeBinaryToWriter
    );
  }
  f = message.getApproveStage();
  if (f != null) {
    writer.writeMessage(
      34,
      f,
      proto.model.Command.ApproveStage.serializeBinaryToWriter
    );
  }
  f = message.getBuildPlanPreview();
  if (f != null) {
    writer.writeMessage(
      35,
      f,
      proto.model.Command.BuildPlanPreview.serializeBinaryToWriter
    );
  }
  f = message.getChainSyncApplication();
  if (f != null) {
    writer.writeMessage(
      36,
      f,
      proto.model.Command.ChainSyncApplication.serializeBinaryToWriter
    );
  }
  f = message.getSkipStage();
  if (f != null) {
    writer.writeMessage(
      37,
      f,
      proto.model.Command.SkipStage.serializeBinaryToWriter
    );
  }
  f = message.getRestartPiped();
  if (f != null) {
    writer.writeMessage(
      38,
      f,
      proto.model.Command.RestartPiped.serializeBinaryToWriter
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      100,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      101,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.model.Command.Type = {
  SYNC_APPLICATION: 0,
  UPDATE_APPLICATION_CONFIG: 1,
  CANCEL_DEPLOYMENT: 2,
  APPROVE_STAGE: 3,
  BUILD_PLAN_PREVIEW: 4,
  CHAIN_SYNC_APPLICATION: 5,
  SKIP_STAGE: 6,
  RESTART_PIPED: 7
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.SyncApplication.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.SyncApplication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.SyncApplication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.SyncApplication.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    syncStrategy: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.SyncApplication}
 */
proto.model.Command.SyncApplication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.SyncApplication;
  return proto.model.Command.SyncApplication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.SyncApplication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.SyncApplication}
 */
proto.model.Command.SyncApplication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {!proto.model.SyncStrategy} */ (reader.readEnum());
      msg.setSyncStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.SyncApplication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.SyncApplication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.SyncApplication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.SyncApplication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getSyncStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
};


/**
 * optional string application_id = 1;
 * @return {string}
 */
proto.model.Command.SyncApplication.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.SyncApplication} returns this
 */
proto.model.Command.SyncApplication.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SyncStrategy sync_strategy = 2;
 * @return {!proto.model.SyncStrategy}
 */
proto.model.Command.SyncApplication.prototype.getSyncStrategy = function() {
  return /** @type {!proto.model.SyncStrategy} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.model.SyncStrategy} value
 * @return {!proto.model.Command.SyncApplication} returns this
 */
proto.model.Command.SyncApplication.prototype.setSyncStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.UpdateApplicationConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.UpdateApplicationConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.UpdateApplicationConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.UpdateApplicationConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    applicationId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    configPath: jspb.Message.getFieldWithDefault(msg, 2, ""),
    config: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.UpdateApplicationConfig}
 */
proto.model.Command.UpdateApplicationConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.UpdateApplicationConfig;
  return proto.model.Command.UpdateApplicationConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.UpdateApplicationConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.UpdateApplicationConfig}
 */
proto.model.Command.UpdateApplicationConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfigPath(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.UpdateApplicationConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.UpdateApplicationConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.UpdateApplicationConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.UpdateApplicationConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getConfigPath();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getConfig();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string application_id = 1;
 * @return {string}
 */
proto.model.Command.UpdateApplicationConfig.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.UpdateApplicationConfig} returns this
 */
proto.model.Command.UpdateApplicationConfig.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string config_path = 2;
 * @return {string}
 */
proto.model.Command.UpdateApplicationConfig.prototype.getConfigPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.UpdateApplicationConfig} returns this
 */
proto.model.Command.UpdateApplicationConfig.prototype.setConfigPath = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string config = 3;
 * @return {string}
 */
proto.model.Command.UpdateApplicationConfig.prototype.getConfig = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.UpdateApplicationConfig} returns this
 */
proto.model.Command.UpdateApplicationConfig.prototype.setConfig = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.CancelDeployment.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.CancelDeployment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.CancelDeployment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.CancelDeployment.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    forceRollback: jspb.Message.getBooleanFieldWithDefault(msg, 2, false),
    forceNoRollback: jspb.Message.getBooleanFieldWithDefault(msg, 3, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.CancelDeployment}
 */
proto.model.Command.CancelDeployment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.CancelDeployment;
  return proto.model.Command.CancelDeployment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.CancelDeployment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.CancelDeployment}
 */
proto.model.Command.CancelDeployment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceRollback(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setForceNoRollback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.CancelDeployment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.CancelDeployment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.CancelDeployment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.CancelDeployment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getForceRollback();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getForceNoRollback();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
};


/**
 * optional string deployment_id = 1;
 * @return {string}
 */
proto.model.Command.CancelDeployment.prototype.getDeploymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.CancelDeployment} returns this
 */
proto.model.Command.CancelDeployment.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool force_rollback = 2;
 * @return {boolean}
 */
proto.model.Command.CancelDeployment.prototype.getForceRollback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.Command.CancelDeployment} returns this
 */
proto.model.Command.CancelDeployment.prototype.setForceRollback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * optional bool force_no_rollback = 3;
 * @return {boolean}
 */
proto.model.Command.CancelDeployment.prototype.getForceNoRollback = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.Command.CancelDeployment} returns this
 */
proto.model.Command.CancelDeployment.prototype.setForceNoRollback = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.ApproveStage.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.ApproveStage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.ApproveStage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.ApproveStage.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stageId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.ApproveStage}
 */
proto.model.Command.ApproveStage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.ApproveStage;
  return proto.model.Command.ApproveStage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.ApproveStage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.ApproveStage}
 */
proto.model.Command.ApproveStage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.ApproveStage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.ApproveStage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.ApproveStage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.ApproveStage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStageId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string deployment_id = 1;
 * @return {string}
 */
proto.model.Command.ApproveStage.prototype.getDeploymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.ApproveStage} returns this
 */
proto.model.Command.ApproveStage.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string stage_id = 2;
 * @return {string}
 */
proto.model.Command.ApproveStage.prototype.getStageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.ApproveStage} returns this
 */
proto.model.Command.ApproveStage.prototype.setStageId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.BuildPlanPreview.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.BuildPlanPreview.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.BuildPlanPreview} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.BuildPlanPreview.toObject = function(includeInstance, msg) {
  var f, obj = {
    repositoryId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    headBranch: jspb.Message.getFieldWithDefault(msg, 2, ""),
    headCommit: jspb.Message.getFieldWithDefault(msg, 3, ""),
    baseBranch: jspb.Message.getFieldWithDefault(msg, 4, ""),
    timeout: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.BuildPlanPreview}
 */
proto.model.Command.BuildPlanPreview.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.BuildPlanPreview;
  return proto.model.Command.BuildPlanPreview.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.BuildPlanPreview} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.BuildPlanPreview}
 */
proto.model.Command.BuildPlanPreview.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRepositoryId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadBranch(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadCommit(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBaseBranch(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeout(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.BuildPlanPreview.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.BuildPlanPreview.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.BuildPlanPreview} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.BuildPlanPreview.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRepositoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getHeadBranch();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getHeadCommit();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBaseBranch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getTimeout();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
};


/**
 * optional string repository_id = 1;
 * @return {string}
 */
proto.model.Command.BuildPlanPreview.prototype.getRepositoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.BuildPlanPreview} returns this
 */
proto.model.Command.BuildPlanPreview.prototype.setRepositoryId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string head_branch = 2;
 * @return {string}
 */
proto.model.Command.BuildPlanPreview.prototype.getHeadBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.BuildPlanPreview} returns this
 */
proto.model.Command.BuildPlanPreview.prototype.setHeadBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string head_commit = 3;
 * @return {string}
 */
proto.model.Command.BuildPlanPreview.prototype.getHeadCommit = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.BuildPlanPreview} returns this
 */
proto.model.Command.BuildPlanPreview.prototype.setHeadCommit = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string base_branch = 4;
 * @return {string}
 */
proto.model.Command.BuildPlanPreview.prototype.getBaseBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.BuildPlanPreview} returns this
 */
proto.model.Command.BuildPlanPreview.prototype.setBaseBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 timeout = 5;
 * @return {number}
 */
proto.model.Command.BuildPlanPreview.prototype.getTimeout = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Command.BuildPlanPreview} returns this
 */
proto.model.Command.BuildPlanPreview.prototype.setTimeout = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.ChainSyncApplication.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.ChainSyncApplication.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.ChainSyncApplication} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.ChainSyncApplication.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentChainId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    blockIndex: jspb.Message.getFieldWithDefault(msg, 2, 0),
    applicationId: jspb.Message.getFieldWithDefault(msg, 3, ""),
    syncStrategy: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.ChainSyncApplication}
 */
proto.model.Command.ChainSyncApplication.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.ChainSyncApplication;
  return proto.model.Command.ChainSyncApplication.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.ChainSyncApplication} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.ChainSyncApplication}
 */
proto.model.Command.ChainSyncApplication.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentChainId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBlockIndex(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 4:
      var value = /** @type {!proto.model.SyncStrategy} */ (reader.readEnum());
      msg.setSyncStrategy(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.ChainSyncApplication.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.ChainSyncApplication.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.ChainSyncApplication} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.ChainSyncApplication.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentChainId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getBlockIndex();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getSyncStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
};


/**
 * optional string deployment_chain_id = 1;
 * @return {string}
 */
proto.model.Command.ChainSyncApplication.prototype.getDeploymentChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.ChainSyncApplication} returns this
 */
proto.model.Command.ChainSyncApplication.prototype.setDeploymentChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 block_index = 2;
 * @return {number}
 */
proto.model.Command.ChainSyncApplication.prototype.getBlockIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Command.ChainSyncApplication} returns this
 */
proto.model.Command.ChainSyncApplication.prototype.setBlockIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string application_id = 3;
 * @return {string}
 */
proto.model.Command.ChainSyncApplication.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.ChainSyncApplication} returns this
 */
proto.model.Command.ChainSyncApplication.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional SyncStrategy sync_strategy = 4;
 * @return {!proto.model.SyncStrategy}
 */
proto.model.Command.ChainSyncApplication.prototype.getSyncStrategy = function() {
  return /** @type {!proto.model.SyncStrategy} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.model.SyncStrategy} value
 * @return {!proto.model.Command.ChainSyncApplication} returns this
 */
proto.model.Command.ChainSyncApplication.prototype.setSyncStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.SkipStage.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.SkipStage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.SkipStage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.SkipStage.toObject = function(includeInstance, msg) {
  var f, obj = {
    deploymentId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    stageId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.SkipStage}
 */
proto.model.Command.SkipStage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.SkipStage;
  return proto.model.Command.SkipStage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.SkipStage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.SkipStage}
 */
proto.model.Command.SkipStage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setStageId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.SkipStage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.SkipStage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.SkipStage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.SkipStage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeploymentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getStageId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string deployment_id = 1;
 * @return {string}
 */
proto.model.Command.SkipStage.prototype.getDeploymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.SkipStage} returns this
 */
proto.model.Command.SkipStage.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string stage_id = 2;
 * @return {string}
 */
proto.model.Command.SkipStage.prototype.getStageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.SkipStage} returns this
 */
proto.model.Command.SkipStage.prototype.setStageId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Command.RestartPiped.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Command.RestartPiped.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Command.RestartPiped} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.RestartPiped.toObject = function(includeInstance, msg) {
  var f, obj = {
    pipedId: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Command.RestartPiped}
 */
proto.model.Command.RestartPiped.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Command.RestartPiped;
  return proto.model.Command.RestartPiped.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Command.RestartPiped} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Command.RestartPiped}
 */
proto.model.Command.RestartPiped.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPipedId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Command.RestartPiped.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Command.RestartPiped.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Command.RestartPiped} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Command.RestartPiped.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPipedId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string piped_id = 1;
 * @return {string}
 */
proto.model.Command.RestartPiped.prototype.getPipedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command.RestartPiped} returns this
 */
proto.model.Command.RestartPiped.prototype.setPipedId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.Command.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string piped_id = 2;
 * @return {string}
 */
proto.model.Command.prototype.getPipedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setPipedId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string application_id = 3;
 * @return {string}
 */
proto.model.Command.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string deployment_id = 4;
 * @return {string}
 */
proto.model.Command.prototype.getDeploymentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setDeploymentId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string stage_id = 5;
 * @return {string}
 */
proto.model.Command.prototype.getStageId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setStageId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string commander = 6;
 * @return {string}
 */
proto.model.Command.prototype.getCommander = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setCommander = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string project_id = 7;
 * @return {string}
 */
proto.model.Command.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional CommandStatus status = 20;
 * @return {!proto.model.CommandStatus}
 */
proto.model.Command.prototype.getStatus = function() {
  return /** @type {!proto.model.CommandStatus} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/**
 * @param {!proto.model.CommandStatus} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 20, value);
};


/**
 * map<string, string> metadata = 21;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.Command.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 21, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional int64 handled_at = 22;
 * @return {number}
 */
proto.model.Command.prototype.getHandledAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setHandledAt = function(value) {
  return jspb.Message.setProto3IntField(this, 22, value);
};


/**
 * optional Type type = 30;
 * @return {!proto.model.Command.Type}
 */
proto.model.Command.prototype.getType = function() {
  return /** @type {!proto.model.Command.Type} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {!proto.model.Command.Type} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};


/**
 * optional SyncApplication sync_application = 31;
 * @return {?proto.model.Command.SyncApplication}
 */
proto.model.Command.prototype.getSyncApplication = function() {
  return /** @type{?proto.model.Command.SyncApplication} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.SyncApplication, 31));
};


/**
 * @param {?proto.model.Command.SyncApplication|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setSyncApplication = function(value) {
  return jspb.Message.setWrapperField(this, 31, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearSyncApplication = function() {
  return this.setSyncApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasSyncApplication = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional UpdateApplicationConfig update_application_config = 32;
 * @return {?proto.model.Command.UpdateApplicationConfig}
 */
proto.model.Command.prototype.getUpdateApplicationConfig = function() {
  return /** @type{?proto.model.Command.UpdateApplicationConfig} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.UpdateApplicationConfig, 32));
};


/**
 * @param {?proto.model.Command.UpdateApplicationConfig|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setUpdateApplicationConfig = function(value) {
  return jspb.Message.setWrapperField(this, 32, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearUpdateApplicationConfig = function() {
  return this.setUpdateApplicationConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasUpdateApplicationConfig = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional CancelDeployment cancel_deployment = 33;
 * @return {?proto.model.Command.CancelDeployment}
 */
proto.model.Command.prototype.getCancelDeployment = function() {
  return /** @type{?proto.model.Command.CancelDeployment} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.CancelDeployment, 33));
};


/**
 * @param {?proto.model.Command.CancelDeployment|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setCancelDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 33, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearCancelDeployment = function() {
  return this.setCancelDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasCancelDeployment = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional ApproveStage approve_stage = 34;
 * @return {?proto.model.Command.ApproveStage}
 */
proto.model.Command.prototype.getApproveStage = function() {
  return /** @type{?proto.model.Command.ApproveStage} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.ApproveStage, 34));
};


/**
 * @param {?proto.model.Command.ApproveStage|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setApproveStage = function(value) {
  return jspb.Message.setWrapperField(this, 34, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearApproveStage = function() {
  return this.setApproveStage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasApproveStage = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional BuildPlanPreview build_plan_preview = 35;
 * @return {?proto.model.Command.BuildPlanPreview}
 */
proto.model.Command.prototype.getBuildPlanPreview = function() {
  return /** @type{?proto.model.Command.BuildPlanPreview} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.BuildPlanPreview, 35));
};


/**
 * @param {?proto.model.Command.BuildPlanPreview|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setBuildPlanPreview = function(value) {
  return jspb.Message.setWrapperField(this, 35, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearBuildPlanPreview = function() {
  return this.setBuildPlanPreview(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasBuildPlanPreview = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional ChainSyncApplication chain_sync_application = 36;
 * @return {?proto.model.Command.ChainSyncApplication}
 */
proto.model.Command.prototype.getChainSyncApplication = function() {
  return /** @type{?proto.model.Command.ChainSyncApplication} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.ChainSyncApplication, 36));
};


/**
 * @param {?proto.model.Command.ChainSyncApplication|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setChainSyncApplication = function(value) {
  return jspb.Message.setWrapperField(this, 36, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearChainSyncApplication = function() {
  return this.setChainSyncApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasChainSyncApplication = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional SkipStage skip_stage = 37;
 * @return {?proto.model.Command.SkipStage}
 */
proto.model.Command.prototype.getSkipStage = function() {
  return /** @type{?proto.model.Command.SkipStage} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.SkipStage, 37));
};


/**
 * @param {?proto.model.Command.SkipStage|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setSkipStage = function(value) {
  return jspb.Message.setWrapperField(this, 37, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearSkipStage = function() {
  return this.setSkipStage(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasSkipStage = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional RestartPiped restart_piped = 38;
 * @return {?proto.model.Command.RestartPiped}
 */
proto.model.Command.prototype.getRestartPiped = function() {
  return /** @type{?proto.model.Command.RestartPiped} */ (
    jspb.Message.getWrapperField(this, proto.model.Command.RestartPiped, 38));
};


/**
 * @param {?proto.model.Command.RestartPiped|undefined} value
 * @return {!proto.model.Command} returns this
*/
proto.model.Command.prototype.setRestartPiped = function(value) {
  return jspb.Message.setWrapperField(this, 38, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.clearRestartPiped = function() {
  return this.setRestartPiped(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Command.prototype.hasRestartPiped = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional int64 created_at = 100;
 * @return {number}
 */
proto.model.Command.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 100, value);
};


/**
 * optional int64 updated_at = 101;
 * @return {number}
 */
proto.model.Command.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Command} returns this
 */
proto.model.Command.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 101, value);
};


/**
 * @enum {number}
 */
proto.model.CommandStatus = {
  COMMAND_NOT_HANDLED_YET: 0,
  COMMAND_SUCCEEDED: 1,
  COMMAND_FAILED: 2,
  COMMAND_TIMEOUT: 3
};

goog.object.extend(exports, proto.model);
