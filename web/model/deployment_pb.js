// source: pkg/model/deployment.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();



var pkg_model_common_pb = require('pipecd/web/model/common_pb.js');
goog.object.extend(proto, pkg_model_common_pb);
goog.exportSymbol('proto.model.Commit', null, global);
goog.exportSymbol('proto.model.Deployment', null, global);
goog.exportSymbol('proto.model.DeploymentStatus', null, global);
goog.exportSymbol('proto.model.DeploymentTrigger', null, global);
goog.exportSymbol('proto.model.PipelineStage', null, global);
goog.exportSymbol('proto.model.StageStatus', null, global);
goog.exportSymbol('proto.model.TriggerKind', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Deployment = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.Deployment.repeatedFields_, null);
};
goog.inherits(proto.model.Deployment, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Deployment.displayName = 'proto.model.Deployment';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.DeploymentTrigger = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.DeploymentTrigger, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.DeploymentTrigger.displayName = 'proto.model.DeploymentTrigger';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.PipelineStage = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.PipelineStage.repeatedFields_, null);
};
goog.inherits(proto.model.PipelineStage, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.PipelineStage.displayName = 'proto.model.PipelineStage';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.Commit = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.Commit, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.Commit.displayName = 'proto.model.Commit';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.Deployment.repeatedFields_ = [24,32];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Deployment.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Deployment.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Deployment} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Deployment.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    applicationId: jspb.Message.getFieldWithDefault(msg, 2, ""),
    applicationName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    pipedId: jspb.Message.getFieldWithDefault(msg, 5, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 7, 0),
    gitPath: (f = msg.getGitPath()) && pkg_model_common_pb.ApplicationGitPath.toObject(includeInstance, f),
    cloudProvider: jspb.Message.getFieldWithDefault(msg, 9, ""),
    platformProvider: jspb.Message.getFieldWithDefault(msg, 11, ""),
    labelsMap: (f = msg.getLabelsMap()) ? f.toObject(includeInstance, undefined) : [],
    trigger: (f = msg.getTrigger()) && proto.model.DeploymentTrigger.toObject(includeInstance, f),
    summary: jspb.Message.getFieldWithDefault(msg, 22, ""),
    version: jspb.Message.getFieldWithDefault(msg, 23, ""),
    versionsList: jspb.Message.toObjectList(msg.getVersionsList(),
    pkg_model_common_pb.ArtifactVersion.toObject, includeInstance),
    runningCommitHash: jspb.Message.getFieldWithDefault(msg, 21, ""),
    runningConfigFilename: jspb.Message.getFieldWithDefault(msg, 60, ""),
    status: jspb.Message.getFieldWithDefault(msg, 30, 0),
    statusReason: jspb.Message.getFieldWithDefault(msg, 31, ""),
    stagesList: jspb.Message.toObjectList(msg.getStagesList(),
    proto.model.PipelineStage.toObject, includeInstance),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    deploymentChainId: jspb.Message.getFieldWithDefault(msg, 40, ""),
    deploymentChainBlockIndex: jspb.Message.getFieldWithDefault(msg, 41, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 100, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 101, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 102, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Deployment}
 */
proto.model.Deployment.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Deployment;
  return proto.model.Deployment.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Deployment} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Deployment}
 */
proto.model.Deployment.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApplicationName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPipedId(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    case 7:
      var value = /** @type {!proto.model.ApplicationKind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 8:
      var value = new pkg_model_common_pb.ApplicationGitPath;
      reader.readMessage(value,pkg_model_common_pb.ApplicationGitPath.deserializeBinaryFromReader);
      msg.setGitPath(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setCloudProvider(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformProvider(value);
      break;
    case 10:
      var value = msg.getLabelsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 20:
      var value = new proto.model.DeploymentTrigger;
      reader.readMessage(value,proto.model.DeploymentTrigger.deserializeBinaryFromReader);
      msg.setTrigger(value);
      break;
    case 22:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 24:
      var value = new pkg_model_common_pb.ArtifactVersion;
      reader.readMessage(value,pkg_model_common_pb.ArtifactVersion.deserializeBinaryFromReader);
      msg.addVersions(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunningCommitHash(value);
      break;
    case 60:
      var value = /** @type {string} */ (reader.readString());
      msg.setRunningConfigFilename(value);
      break;
    case 30:
      var value = /** @type {!proto.model.DeploymentStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 31:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusReason(value);
      break;
    case 32:
      var value = new proto.model.PipelineStage;
      reader.readMessage(value,proto.model.PipelineStage.deserializeBinaryFromReader);
      msg.addStages(value);
      break;
    case 33:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 40:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeploymentChainId(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeploymentChainBlockIndex(value);
      break;
    case 100:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompletedAt(value);
      break;
    case 101:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 102:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Deployment.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Deployment.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Deployment} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Deployment.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApplicationId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getApplicationName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPipedId();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getGitPath();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      pkg_model_common_pb.ApplicationGitPath.serializeBinaryToWriter
    );
  }
  f = message.getCloudProvider();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getPlatformProvider();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLabelsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getTrigger();
  if (f != null) {
    writer.writeMessage(
      20,
      f,
      proto.model.DeploymentTrigger.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      22,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      23,
      f
    );
  }
  f = message.getVersionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      24,
      f,
      pkg_model_common_pb.ArtifactVersion.serializeBinaryToWriter
    );
  }
  f = message.getRunningCommitHash();
  if (f.length > 0) {
    writer.writeString(
      21,
      f
    );
  }
  f = message.getRunningConfigFilename();
  if (f.length > 0) {
    writer.writeString(
      60,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      30,
      f
    );
  }
  f = message.getStatusReason();
  if (f.length > 0) {
    writer.writeString(
      31,
      f
    );
  }
  f = message.getStagesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      32,
      f,
      proto.model.PipelineStage.serializeBinaryToWriter
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(33, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getDeploymentChainId();
  if (f.length > 0) {
    writer.writeString(
      40,
      f
    );
  }
  f = message.getDeploymentChainBlockIndex();
  if (f !== 0) {
    writer.writeUint32(
      41,
      f
    );
  }
  f = message.getCompletedAt();
  if (f !== 0) {
    writer.writeInt64(
      100,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      101,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      102,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.Deployment.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string application_id = 2;
 * @return {string}
 */
proto.model.Deployment.prototype.getApplicationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setApplicationId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string application_name = 3;
 * @return {string}
 */
proto.model.Deployment.prototype.getApplicationName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setApplicationName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string piped_id = 5;
 * @return {string}
 */
proto.model.Deployment.prototype.getPipedId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setPipedId = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string project_id = 6;
 * @return {string}
 */
proto.model.Deployment.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional ApplicationKind kind = 7;
 * @return {!proto.model.ApplicationKind}
 */
proto.model.Deployment.prototype.getKind = function() {
  return /** @type {!proto.model.ApplicationKind} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.model.ApplicationKind} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setKind = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * optional ApplicationGitPath git_path = 8;
 * @return {?proto.model.ApplicationGitPath}
 */
proto.model.Deployment.prototype.getGitPath = function() {
  return /** @type{?proto.model.ApplicationGitPath} */ (
    jspb.Message.getWrapperField(this, pkg_model_common_pb.ApplicationGitPath, 8));
};


/**
 * @param {?proto.model.ApplicationGitPath|undefined} value
 * @return {!proto.model.Deployment} returns this
*/
proto.model.Deployment.prototype.setGitPath = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearGitPath = function() {
  return this.setGitPath(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Deployment.prototype.hasGitPath = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string cloud_provider = 9;
 * @return {string}
 */
proto.model.Deployment.prototype.getCloudProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setCloudProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional string platform_provider = 11;
 * @return {string}
 */
proto.model.Deployment.prototype.getPlatformProvider = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setPlatformProvider = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * map<string, string> labels = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.Deployment.prototype.getLabelsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearLabelsMap = function() {
  this.getLabelsMap().clear();
  return this;};


/**
 * optional DeploymentTrigger trigger = 20;
 * @return {?proto.model.DeploymentTrigger}
 */
proto.model.Deployment.prototype.getTrigger = function() {
  return /** @type{?proto.model.DeploymentTrigger} */ (
    jspb.Message.getWrapperField(this, proto.model.DeploymentTrigger, 20));
};


/**
 * @param {?proto.model.DeploymentTrigger|undefined} value
 * @return {!proto.model.Deployment} returns this
*/
proto.model.Deployment.prototype.setTrigger = function(value) {
  return jspb.Message.setWrapperField(this, 20, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearTrigger = function() {
  return this.setTrigger(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.Deployment.prototype.hasTrigger = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string summary = 22;
 * @return {string}
 */
proto.model.Deployment.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 22, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 22, value);
};


/**
 * optional string version = 23;
 * @return {string}
 */
proto.model.Deployment.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 23, value);
};


/**
 * repeated ArtifactVersion versions = 24;
 * @return {!Array<!proto.model.ArtifactVersion>}
 */
proto.model.Deployment.prototype.getVersionsList = function() {
  return /** @type{!Array<!proto.model.ArtifactVersion>} */ (
    jspb.Message.getRepeatedWrapperField(this, pkg_model_common_pb.ArtifactVersion, 24));
};


/**
 * @param {!Array<!proto.model.ArtifactVersion>} value
 * @return {!proto.model.Deployment} returns this
*/
proto.model.Deployment.prototype.setVersionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 24, value);
};


/**
 * @param {!proto.model.ArtifactVersion=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.ArtifactVersion}
 */
proto.model.Deployment.prototype.addVersions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 24, opt_value, proto.model.ArtifactVersion, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearVersionsList = function() {
  return this.setVersionsList([]);
};


/**
 * optional string running_commit_hash = 21;
 * @return {string}
 */
proto.model.Deployment.prototype.getRunningCommitHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setRunningCommitHash = function(value) {
  return jspb.Message.setProto3StringField(this, 21, value);
};


/**
 * optional string running_config_filename = 60;
 * @return {string}
 */
proto.model.Deployment.prototype.getRunningConfigFilename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 60, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setRunningConfigFilename = function(value) {
  return jspb.Message.setProto3StringField(this, 60, value);
};


/**
 * optional DeploymentStatus status = 30;
 * @return {!proto.model.DeploymentStatus}
 */
proto.model.Deployment.prototype.getStatus = function() {
  return /** @type {!proto.model.DeploymentStatus} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/**
 * @param {!proto.model.DeploymentStatus} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 30, value);
};


/**
 * optional string status_reason = 31;
 * @return {string}
 */
proto.model.Deployment.prototype.getStatusReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 31, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setStatusReason = function(value) {
  return jspb.Message.setProto3StringField(this, 31, value);
};


/**
 * repeated PipelineStage stages = 32;
 * @return {!Array<!proto.model.PipelineStage>}
 */
proto.model.Deployment.prototype.getStagesList = function() {
  return /** @type{!Array<!proto.model.PipelineStage>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.model.PipelineStage, 32));
};


/**
 * @param {!Array<!proto.model.PipelineStage>} value
 * @return {!proto.model.Deployment} returns this
*/
proto.model.Deployment.prototype.setStagesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 32, value);
};


/**
 * @param {!proto.model.PipelineStage=} opt_value
 * @param {number=} opt_index
 * @return {!proto.model.PipelineStage}
 */
proto.model.Deployment.prototype.addStages = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 32, opt_value, proto.model.PipelineStage, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearStagesList = function() {
  return this.setStagesList([]);
};


/**
 * map<string, string> metadata = 33;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.Deployment.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 33, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional string deployment_chain_id = 40;
 * @return {string}
 */
proto.model.Deployment.prototype.getDeploymentChainId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 40, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setDeploymentChainId = function(value) {
  return jspb.Message.setProto3StringField(this, 40, value);
};


/**
 * optional uint32 deployment_chain_block_index = 41;
 * @return {number}
 */
proto.model.Deployment.prototype.getDeploymentChainBlockIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setDeploymentChainBlockIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 41, value);
};


/**
 * optional int64 completed_at = 100;
 * @return {number}
 */
proto.model.Deployment.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 100, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setCompletedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 100, value);
};


/**
 * optional int64 created_at = 101;
 * @return {number}
 */
proto.model.Deployment.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 101, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 101, value);
};


/**
 * optional int64 updated_at = 102;
 * @return {number}
 */
proto.model.Deployment.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 102, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Deployment} returns this
 */
proto.model.Deployment.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 102, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.DeploymentTrigger.prototype.toObject = function(opt_includeInstance) {
  return proto.model.DeploymentTrigger.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.DeploymentTrigger} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeploymentTrigger.toObject = function(includeInstance, msg) {
  var f, obj = {
    commit: (f = msg.getCommit()) && proto.model.Commit.toObject(includeInstance, f),
    commander: jspb.Message.getFieldWithDefault(msg, 2, ""),
    timestamp: jspb.Message.getFieldWithDefault(msg, 3, 0),
    syncStrategy: jspb.Message.getFieldWithDefault(msg, 4, 0),
    strategySummary: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.DeploymentTrigger}
 */
proto.model.DeploymentTrigger.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.DeploymentTrigger;
  return proto.model.DeploymentTrigger.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.DeploymentTrigger} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.DeploymentTrigger}
 */
proto.model.DeploymentTrigger.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.model.Commit;
      reader.readMessage(value,proto.model.Commit.deserializeBinaryFromReader);
      msg.setCommit(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommander(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimestamp(value);
      break;
    case 4:
      var value = /** @type {!proto.model.SyncStrategy} */ (reader.readEnum());
      msg.setSyncStrategy(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setStrategySummary(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.DeploymentTrigger.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.DeploymentTrigger.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.DeploymentTrigger} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.DeploymentTrigger.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCommit();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.model.Commit.serializeBinaryToWriter
    );
  }
  f = message.getCommander();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTimestamp();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getSyncStrategy();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getStrategySummary();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional Commit commit = 1;
 * @return {?proto.model.Commit}
 */
proto.model.DeploymentTrigger.prototype.getCommit = function() {
  return /** @type{?proto.model.Commit} */ (
    jspb.Message.getWrapperField(this, proto.model.Commit, 1));
};


/**
 * @param {?proto.model.Commit|undefined} value
 * @return {!proto.model.DeploymentTrigger} returns this
*/
proto.model.DeploymentTrigger.prototype.setCommit = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.DeploymentTrigger} returns this
 */
proto.model.DeploymentTrigger.prototype.clearCommit = function() {
  return this.setCommit(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.DeploymentTrigger.prototype.hasCommit = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string commander = 2;
 * @return {string}
 */
proto.model.DeploymentTrigger.prototype.getCommander = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.DeploymentTrigger} returns this
 */
proto.model.DeploymentTrigger.prototype.setCommander = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int64 timestamp = 3;
 * @return {number}
 */
proto.model.DeploymentTrigger.prototype.getTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.DeploymentTrigger} returns this
 */
proto.model.DeploymentTrigger.prototype.setTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional SyncStrategy sync_strategy = 4;
 * @return {!proto.model.SyncStrategy}
 */
proto.model.DeploymentTrigger.prototype.getSyncStrategy = function() {
  return /** @type {!proto.model.SyncStrategy} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.model.SyncStrategy} value
 * @return {!proto.model.DeploymentTrigger} returns this
 */
proto.model.DeploymentTrigger.prototype.setSyncStrategy = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string strategy_summary = 5;
 * @return {string}
 */
proto.model.DeploymentTrigger.prototype.getStrategySummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.DeploymentTrigger} returns this
 */
proto.model.DeploymentTrigger.prototype.setStrategySummary = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.PipelineStage.repeatedFields_ = [6];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.PipelineStage.prototype.toObject = function(opt_includeInstance) {
  return proto.model.PipelineStage.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.PipelineStage} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PipelineStage.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    desc: jspb.Message.getFieldWithDefault(msg, 3, ""),
    index: jspb.Message.getFieldWithDefault(msg, 4, 0),
    predefined: jspb.Message.getBooleanFieldWithDefault(msg, 5, false),
    requiresList: (f = jspb.Message.getRepeatedField(msg, 6)) == null ? undefined : f,
    visible: jspb.Message.getBooleanFieldWithDefault(msg, 7, false),
    status: jspb.Message.getFieldWithDefault(msg, 8, 0),
    statusReason: jspb.Message.getFieldWithDefault(msg, 9, ""),
    metadataMap: (f = msg.getMetadataMap()) ? f.toObject(includeInstance, undefined) : [],
    retriedCount: jspb.Message.getFieldWithDefault(msg, 11, 0),
    completedAt: jspb.Message.getFieldWithDefault(msg, 13, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 14, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.PipelineStage}
 */
proto.model.PipelineStage.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.PipelineStage;
  return proto.model.PipelineStage.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.PipelineStage} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.PipelineStage}
 */
proto.model.PipelineStage.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDesc(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setIndex(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setPredefined(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.addRequires(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setVisible(value);
      break;
    case 8:
      var value = /** @type {!proto.model.StageStatus} */ (reader.readEnum());
      msg.setStatus(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setStatusReason(value);
      break;
    case 10:
      var value = msg.getMetadataMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetriedCount(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCompletedAt(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.PipelineStage.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.PipelineStage.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.PipelineStage} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.PipelineStage.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDesc();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIndex();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getPredefined();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getRequiresList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      6,
      f
    );
  }
  f = message.getVisible();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getStatusReason();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getMetadataMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(10, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getRetriedCount();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCompletedAt();
  if (f !== 0) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeInt64(
      15,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.PipelineStage.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.model.PipelineStage.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string desc = 3;
 * @return {string}
 */
proto.model.PipelineStage.prototype.getDesc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setDesc = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 index = 4;
 * @return {number}
 */
proto.model.PipelineStage.prototype.getIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional bool predefined = 5;
 * @return {boolean}
 */
proto.model.PipelineStage.prototype.getPredefined = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setPredefined = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * repeated string requires = 6;
 * @return {!Array<string>}
 */
proto.model.PipelineStage.prototype.getRequiresList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 6));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setRequiresList = function(value) {
  return jspb.Message.setField(this, 6, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.addRequires = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 6, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.clearRequiresList = function() {
  return this.setRequiresList([]);
};


/**
 * optional bool visible = 7;
 * @return {boolean}
 */
proto.model.PipelineStage.prototype.getVisible = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setVisible = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};


/**
 * optional StageStatus status = 8;
 * @return {!proto.model.StageStatus}
 */
proto.model.PipelineStage.prototype.getStatus = function() {
  return /** @type {!proto.model.StageStatus} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {!proto.model.StageStatus} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setStatus = function(value) {
  return jspb.Message.setProto3EnumField(this, 8, value);
};


/**
 * optional string status_reason = 9;
 * @return {string}
 */
proto.model.PipelineStage.prototype.getStatusReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setStatusReason = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * map<string, string> metadata = 10;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.model.PipelineStage.prototype.getMetadataMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 10, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.clearMetadataMap = function() {
  this.getMetadataMap().clear();
  return this;};


/**
 * optional int32 retried_count = 11;
 * @return {number}
 */
proto.model.PipelineStage.prototype.getRetriedCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setRetriedCount = function(value) {
  return jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional int64 completed_at = 13;
 * @return {number}
 */
proto.model.PipelineStage.prototype.getCompletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setCompletedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional int64 created_at = 14;
 * @return {number}
 */
proto.model.PipelineStage.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int64 updated_at = 15;
 * @return {number}
 */
proto.model.PipelineStage.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.PipelineStage} returns this
 */
proto.model.PipelineStage.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.Commit.prototype.toObject = function(opt_includeInstance) {
  return proto.model.Commit.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.Commit} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Commit.toObject = function(includeInstance, msg) {
  var f, obj = {
    hash: jspb.Message.getFieldWithDefault(msg, 1, ""),
    message: jspb.Message.getFieldWithDefault(msg, 2, ""),
    author: jspb.Message.getFieldWithDefault(msg, 3, ""),
    branch: jspb.Message.getFieldWithDefault(msg, 4, ""),
    pullRequest: jspb.Message.getFieldWithDefault(msg, 5, 0),
    url: jspb.Message.getFieldWithDefault(msg, 6, ""),
    createdAt: jspb.Message.getFieldWithDefault(msg, 14, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.Commit}
 */
proto.model.Commit.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.Commit;
  return proto.model.Commit.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.Commit} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.Commit}
 */
proto.model.Commit.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setHash(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMessage(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAuthor(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBranch(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPullRequest(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCreatedAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.Commit.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.Commit.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.Commit} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.Commit.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getHash();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getMessage();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAuthor();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBranch();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPullRequest();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getUrl();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeInt64(
      14,
      f
    );
  }
};


/**
 * optional string hash = 1;
 * @return {string}
 */
proto.model.Commit.prototype.getHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setHash = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string message = 2;
 * @return {string}
 */
proto.model.Commit.prototype.getMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string author = 3;
 * @return {string}
 */
proto.model.Commit.prototype.getAuthor = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setAuthor = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string branch = 4;
 * @return {string}
 */
proto.model.Commit.prototype.getBranch = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setBranch = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int64 pull_request = 5;
 * @return {number}
 */
proto.model.Commit.prototype.getPullRequest = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setPullRequest = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string url = 6;
 * @return {string}
 */
proto.model.Commit.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int64 created_at = 14;
 * @return {number}
 */
proto.model.Commit.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/**
 * @param {number} value
 * @return {!proto.model.Commit} returns this
 */
proto.model.Commit.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * @enum {number}
 */
proto.model.DeploymentStatus = {
  DEPLOYMENT_PENDING: 0,
  DEPLOYMENT_PLANNED: 1,
  DEPLOYMENT_RUNNING: 2,
  DEPLOYMENT_ROLLING_BACK: 3,
  DEPLOYMENT_SUCCESS: 4,
  DEPLOYMENT_FAILURE: 5,
  DEPLOYMENT_CANCELLED: 6
};

/**
 * @enum {number}
 */
proto.model.StageStatus = {
  STAGE_NOT_STARTED_YET: 0,
  STAGE_RUNNING: 1,
  STAGE_SUCCESS: 2,
  STAGE_FAILURE: 3,
  STAGE_CANCELLED: 4,
  STAGE_SKIPPED: 5,
  STAGE_EXITED: 6
};

/**
 * @enum {number}
 */
proto.model.TriggerKind = {
  ON_COMMIT: 0,
  ON_COMMAND: 1,
  ON_OUT_OF_SYNC: 2,
  ON_CHAIN: 3
};

goog.object.extend(exports, proto.model);
