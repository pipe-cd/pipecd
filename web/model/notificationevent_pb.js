// source: pkg/model/notificationevent.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();



var pkg_model_application_pb = require('pipecd/web/model/application_pb.js');
goog.object.extend(proto, pkg_model_application_pb);
var pkg_model_deployment_pb = require('pipecd/web/model/deployment_pb.js');
goog.object.extend(proto, pkg_model_deployment_pb);
goog.exportSymbol('proto.model.NotificationEventApplicationOutOfSync', null, global);
goog.exportSymbol('proto.model.NotificationEventApplicationSynced', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentApproved', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentCancelled', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentFailed', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentPlanned', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentRollingBack', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentSucceeded', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentTriggerFailed', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentTriggered', null, global);
goog.exportSymbol('proto.model.NotificationEventDeploymentWaitApproval', null, global);
goog.exportSymbol('proto.model.NotificationEventGroup', null, global);
goog.exportSymbol('proto.model.NotificationEventPipedStarted', null, global);
goog.exportSymbol('proto.model.NotificationEventPipedStopped', null, global);
goog.exportSymbol('proto.model.NotificationEventType', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentTriggered = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentTriggered.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentTriggered, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentTriggered.displayName = 'proto.model.NotificationEventDeploymentTriggered';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentPlanned = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentPlanned.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentPlanned, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentPlanned.displayName = 'proto.model.NotificationEventDeploymentPlanned';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentApproved = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentApproved.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentApproved, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentApproved.displayName = 'proto.model.NotificationEventDeploymentApproved';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentRollingBack = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationEventDeploymentRollingBack, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentRollingBack.displayName = 'proto.model.NotificationEventDeploymentRollingBack';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentSucceeded = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentSucceeded.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentSucceeded, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentSucceeded.displayName = 'proto.model.NotificationEventDeploymentSucceeded';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentFailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentFailed.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentFailed.displayName = 'proto.model.NotificationEventDeploymentFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentCancelled = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentCancelled.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentCancelled, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentCancelled.displayName = 'proto.model.NotificationEventDeploymentCancelled';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentWaitApproval = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentWaitApproval.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentWaitApproval, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentWaitApproval.displayName = 'proto.model.NotificationEventDeploymentWaitApproval';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventDeploymentTriggerFailed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.model.NotificationEventDeploymentTriggerFailed.repeatedFields_, null);
};
goog.inherits(proto.model.NotificationEventDeploymentTriggerFailed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventDeploymentTriggerFailed.displayName = 'proto.model.NotificationEventDeploymentTriggerFailed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventApplicationSynced = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationEventApplicationSynced, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventApplicationSynced.displayName = 'proto.model.NotificationEventApplicationSynced';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventApplicationOutOfSync = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationEventApplicationOutOfSync, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventApplicationOutOfSync.displayName = 'proto.model.NotificationEventApplicationOutOfSync';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventPipedStarted = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationEventPipedStarted, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventPipedStarted.displayName = 'proto.model.NotificationEventPipedStarted';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.model.NotificationEventPipedStopped = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.model.NotificationEventPipedStopped, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.model.NotificationEventPipedStopped.displayName = 'proto.model.NotificationEventPipedStopped';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentTriggered.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentTriggered.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentTriggered.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentTriggered} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentTriggered.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentTriggered}
 */
proto.model.NotificationEventDeploymentTriggered.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentTriggered;
  return proto.model.NotificationEventDeploymentTriggered.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentTriggered} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentTriggered}
 */
proto.model.NotificationEventDeploymentTriggered.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentTriggered.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentTriggered.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentTriggered} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentTriggered.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentTriggered.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentTriggered} returns this
*/
proto.model.NotificationEventDeploymentTriggered.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentTriggered} returns this
 */
proto.model.NotificationEventDeploymentTriggered.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentTriggered.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string mentioned_accounts = 3;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentTriggered.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentTriggered} returns this
 */
proto.model.NotificationEventDeploymentTriggered.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentTriggered} returns this
 */
proto.model.NotificationEventDeploymentTriggered.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentTriggered} returns this
 */
proto.model.NotificationEventDeploymentTriggered.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentPlanned.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentPlanned.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentPlanned} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentPlanned.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    summary: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentPlanned}
 */
proto.model.NotificationEventDeploymentPlanned.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentPlanned;
  return proto.model.NotificationEventDeploymentPlanned.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentPlanned} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentPlanned}
 */
proto.model.NotificationEventDeploymentPlanned.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSummary(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentPlanned.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentPlanned} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentPlanned.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getSummary();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
*/
proto.model.NotificationEventDeploymentPlanned.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
 */
proto.model.NotificationEventDeploymentPlanned.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string summary = 3;
 * @return {string}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.getSummary = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
 */
proto.model.NotificationEventDeploymentPlanned.prototype.setSummary = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string mentioned_accounts = 4;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentPlanned.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
 */
proto.model.NotificationEventDeploymentPlanned.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
 */
proto.model.NotificationEventDeploymentPlanned.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentPlanned} returns this
 */
proto.model.NotificationEventDeploymentPlanned.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentApproved.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentApproved.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentApproved.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentApproved} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentApproved.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    approver: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentApproved}
 */
proto.model.NotificationEventDeploymentApproved.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentApproved;
  return proto.model.NotificationEventDeploymentApproved.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentApproved} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentApproved}
 */
proto.model.NotificationEventDeploymentApproved.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setApprover(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentApproved.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentApproved.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentApproved} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentApproved.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getApprover();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentApproved.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
*/
proto.model.NotificationEventDeploymentApproved.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
 */
proto.model.NotificationEventDeploymentApproved.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentApproved.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string approver = 3;
 * @return {string}
 */
proto.model.NotificationEventDeploymentApproved.prototype.getApprover = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
 */
proto.model.NotificationEventDeploymentApproved.prototype.setApprover = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string mentioned_accounts = 4;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentApproved.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
 */
proto.model.NotificationEventDeploymentApproved.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
 */
proto.model.NotificationEventDeploymentApproved.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentApproved} returns this
 */
proto.model.NotificationEventDeploymentApproved.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentRollingBack.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentRollingBack.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentRollingBack} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentRollingBack.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentRollingBack}
 */
proto.model.NotificationEventDeploymentRollingBack.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentRollingBack;
  return proto.model.NotificationEventDeploymentRollingBack.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentRollingBack} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentRollingBack}
 */
proto.model.NotificationEventDeploymentRollingBack.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentRollingBack.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentRollingBack.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentRollingBack} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentRollingBack.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentRollingBack.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentRollingBack} returns this
*/
proto.model.NotificationEventDeploymentRollingBack.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentRollingBack} returns this
 */
proto.model.NotificationEventDeploymentRollingBack.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentRollingBack.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentSucceeded.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentSucceeded.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentSucceeded} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentSucceeded.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentSucceeded}
 */
proto.model.NotificationEventDeploymentSucceeded.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentSucceeded;
  return proto.model.NotificationEventDeploymentSucceeded.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentSucceeded} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentSucceeded}
 */
proto.model.NotificationEventDeploymentSucceeded.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentSucceeded.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentSucceeded} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentSucceeded.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentSucceeded} returns this
*/
proto.model.NotificationEventDeploymentSucceeded.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentSucceeded} returns this
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string mentioned_accounts = 3;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentSucceeded} returns this
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentSucceeded} returns this
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentSucceeded} returns this
 */
proto.model.NotificationEventDeploymentSucceeded.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentFailed.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentFailed.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentFailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentFailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentFailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    reason: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentFailed}
 */
proto.model.NotificationEventDeploymentFailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentFailed;
  return proto.model.NotificationEventDeploymentFailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentFailed}
 */
proto.model.NotificationEventDeploymentFailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentFailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentFailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentFailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentFailed.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
*/
proto.model.NotificationEventDeploymentFailed.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
 */
proto.model.NotificationEventDeploymentFailed.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentFailed.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string reason = 3;
 * @return {string}
 */
proto.model.NotificationEventDeploymentFailed.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
 */
proto.model.NotificationEventDeploymentFailed.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string mentioned_accounts = 4;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentFailed.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
 */
proto.model.NotificationEventDeploymentFailed.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
 */
proto.model.NotificationEventDeploymentFailed.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentFailed} returns this
 */
proto.model.NotificationEventDeploymentFailed.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentCancelled.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentCancelled.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentCancelled} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentCancelled.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    commander: jspb.Message.getFieldWithDefault(msg, 3, ""),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentCancelled}
 */
proto.model.NotificationEventDeploymentCancelled.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentCancelled;
  return proto.model.NotificationEventDeploymentCancelled.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentCancelled} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentCancelled}
 */
proto.model.NotificationEventDeploymentCancelled.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommander(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentCancelled.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentCancelled} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentCancelled.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getCommander();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
*/
proto.model.NotificationEventDeploymentCancelled.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
 */
proto.model.NotificationEventDeploymentCancelled.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string commander = 3;
 * @return {string}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.getCommander = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
 */
proto.model.NotificationEventDeploymentCancelled.prototype.setCommander = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string mentioned_accounts = 4;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentCancelled.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
 */
proto.model.NotificationEventDeploymentCancelled.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
 */
proto.model.NotificationEventDeploymentCancelled.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentCancelled} returns this
 */
proto.model.NotificationEventDeploymentCancelled.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentWaitApproval.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentWaitApproval.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentWaitApproval} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentWaitApproval.toObject = function(includeInstance, msg) {
  var f, obj = {
    deployment: (f = msg.getDeployment()) && pkg_model_deployment_pb.Deployment.toObject(includeInstance, f),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentWaitApproval}
 */
proto.model.NotificationEventDeploymentWaitApproval.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentWaitApproval;
  return proto.model.NotificationEventDeploymentWaitApproval.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentWaitApproval} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentWaitApproval}
 */
proto.model.NotificationEventDeploymentWaitApproval.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_deployment_pb.Deployment;
      reader.readMessage(value,pkg_model_deployment_pb.Deployment.deserializeBinaryFromReader);
      msg.setDeployment(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentWaitApproval.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentWaitApproval} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentWaitApproval.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeployment();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_deployment_pb.Deployment.serializeBinaryToWriter
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      3,
      f
    );
  }
};


/**
 * optional Deployment deployment = 1;
 * @return {?proto.model.Deployment}
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.getDeployment = function() {
  return /** @type{?proto.model.Deployment} */ (
    jspb.Message.getWrapperField(this, pkg_model_deployment_pb.Deployment, 1));
};


/**
 * @param {?proto.model.Deployment|undefined} value
 * @return {!proto.model.NotificationEventDeploymentWaitApproval} returns this
*/
proto.model.NotificationEventDeploymentWaitApproval.prototype.setDeployment = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentWaitApproval} returns this
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.clearDeployment = function() {
  return this.setDeployment(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.hasDeployment = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated string mentioned_accounts = 3;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentWaitApproval} returns this
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentWaitApproval} returns this
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentWaitApproval} returns this
 */
proto.model.NotificationEventDeploymentWaitApproval.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.model.NotificationEventDeploymentTriggerFailed.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventDeploymentTriggerFailed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventDeploymentTriggerFailed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentTriggerFailed.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && pkg_model_application_pb.Application.toObject(includeInstance, f),
    commitHash: jspb.Message.getFieldWithDefault(msg, 2, ""),
    commitMessage: jspb.Message.getFieldWithDefault(msg, 3, ""),
    reason: jspb.Message.getFieldWithDefault(msg, 4, ""),
    mentionedAccountsList: (f = jspb.Message.getRepeatedField(msg, 5)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed}
 */
proto.model.NotificationEventDeploymentTriggerFailed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventDeploymentTriggerFailed;
  return proto.model.NotificationEventDeploymentTriggerFailed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventDeploymentTriggerFailed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed}
 */
proto.model.NotificationEventDeploymentTriggerFailed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_application_pb.Application;
      reader.readMessage(value,pkg_model_application_pb.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitHash(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCommitMessage(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setReason(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.addMentionedAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventDeploymentTriggerFailed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventDeploymentTriggerFailed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventDeploymentTriggerFailed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_application_pb.Application.serializeBinaryToWriter
    );
  }
  f = message.getCommitHash();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCommitMessage();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getReason();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getMentionedAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      5,
      f
    );
  }
};


/**
 * optional Application application = 1;
 * @return {?proto.model.Application}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.getApplication = function() {
  return /** @type{?proto.model.Application} */ (
    jspb.Message.getWrapperField(this, pkg_model_application_pb.Application, 1));
};


/**
 * @param {?proto.model.Application|undefined} value
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
*/
proto.model.NotificationEventDeploymentTriggerFailed.prototype.setApplication = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.clearApplication = function() {
  return this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string commit_hash = 2;
 * @return {string}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.getCommitHash = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.setCommitHash = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string commit_message = 3;
 * @return {string}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.getCommitMessage = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.setCommitMessage = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string reason = 4;
 * @return {string}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.getReason = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.setReason = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * repeated string mentioned_accounts = 5;
 * @return {!Array<string>}
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.getMentionedAccountsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 5));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.setMentionedAccountsList = function(value) {
  return jspb.Message.setField(this, 5, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.addMentionedAccounts = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 5, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.model.NotificationEventDeploymentTriggerFailed} returns this
 */
proto.model.NotificationEventDeploymentTriggerFailed.prototype.clearMentionedAccountsList = function() {
  return this.setMentionedAccountsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventApplicationSynced.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventApplicationSynced.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventApplicationSynced} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventApplicationSynced.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && pkg_model_application_pb.Application.toObject(includeInstance, f),
    state: (f = msg.getState()) && pkg_model_application_pb.ApplicationSyncState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventApplicationSynced}
 */
proto.model.NotificationEventApplicationSynced.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventApplicationSynced;
  return proto.model.NotificationEventApplicationSynced.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventApplicationSynced} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventApplicationSynced}
 */
proto.model.NotificationEventApplicationSynced.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_application_pb.Application;
      reader.readMessage(value,pkg_model_application_pb.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    case 3:
      var value = new pkg_model_application_pb.ApplicationSyncState;
      reader.readMessage(value,pkg_model_application_pb.ApplicationSyncState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventApplicationSynced.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventApplicationSynced.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventApplicationSynced} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventApplicationSynced.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_application_pb.Application.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      pkg_model_application_pb.ApplicationSyncState.serializeBinaryToWriter
    );
  }
};


/**
 * optional Application application = 1;
 * @return {?proto.model.Application}
 */
proto.model.NotificationEventApplicationSynced.prototype.getApplication = function() {
  return /** @type{?proto.model.Application} */ (
    jspb.Message.getWrapperField(this, pkg_model_application_pb.Application, 1));
};


/**
 * @param {?proto.model.Application|undefined} value
 * @return {!proto.model.NotificationEventApplicationSynced} returns this
*/
proto.model.NotificationEventApplicationSynced.prototype.setApplication = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventApplicationSynced} returns this
 */
proto.model.NotificationEventApplicationSynced.prototype.clearApplication = function() {
  return this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventApplicationSynced.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ApplicationSyncState state = 3;
 * @return {?proto.model.ApplicationSyncState}
 */
proto.model.NotificationEventApplicationSynced.prototype.getState = function() {
  return /** @type{?proto.model.ApplicationSyncState} */ (
    jspb.Message.getWrapperField(this, pkg_model_application_pb.ApplicationSyncState, 3));
};


/**
 * @param {?proto.model.ApplicationSyncState|undefined} value
 * @return {!proto.model.NotificationEventApplicationSynced} returns this
*/
proto.model.NotificationEventApplicationSynced.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventApplicationSynced} returns this
 */
proto.model.NotificationEventApplicationSynced.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventApplicationSynced.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventApplicationOutOfSync.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventApplicationOutOfSync} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventApplicationOutOfSync.toObject = function(includeInstance, msg) {
  var f, obj = {
    application: (f = msg.getApplication()) && pkg_model_application_pb.Application.toObject(includeInstance, f),
    state: (f = msg.getState()) && pkg_model_application_pb.ApplicationSyncState.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventApplicationOutOfSync}
 */
proto.model.NotificationEventApplicationOutOfSync.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventApplicationOutOfSync;
  return proto.model.NotificationEventApplicationOutOfSync.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventApplicationOutOfSync} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventApplicationOutOfSync}
 */
proto.model.NotificationEventApplicationOutOfSync.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new pkg_model_application_pb.Application;
      reader.readMessage(value,pkg_model_application_pb.Application.deserializeBinaryFromReader);
      msg.setApplication(value);
      break;
    case 3:
      var value = new pkg_model_application_pb.ApplicationSyncState;
      reader.readMessage(value,pkg_model_application_pb.ApplicationSyncState.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventApplicationOutOfSync.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventApplicationOutOfSync} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventApplicationOutOfSync.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getApplication();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      pkg_model_application_pb.Application.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      pkg_model_application_pb.ApplicationSyncState.serializeBinaryToWriter
    );
  }
};


/**
 * optional Application application = 1;
 * @return {?proto.model.Application}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.getApplication = function() {
  return /** @type{?proto.model.Application} */ (
    jspb.Message.getWrapperField(this, pkg_model_application_pb.Application, 1));
};


/**
 * @param {?proto.model.Application|undefined} value
 * @return {!proto.model.NotificationEventApplicationOutOfSync} returns this
*/
proto.model.NotificationEventApplicationOutOfSync.prototype.setApplication = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventApplicationOutOfSync} returns this
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.clearApplication = function() {
  return this.setApplication(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.hasApplication = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional ApplicationSyncState state = 3;
 * @return {?proto.model.ApplicationSyncState}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.getState = function() {
  return /** @type{?proto.model.ApplicationSyncState} */ (
    jspb.Message.getWrapperField(this, pkg_model_application_pb.ApplicationSyncState, 3));
};


/**
 * @param {?proto.model.ApplicationSyncState|undefined} value
 * @return {!proto.model.NotificationEventApplicationOutOfSync} returns this
*/
proto.model.NotificationEventApplicationOutOfSync.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.model.NotificationEventApplicationOutOfSync} returns this
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.model.NotificationEventApplicationOutOfSync.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventPipedStarted.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventPipedStarted.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventPipedStarted} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventPipedStarted.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventPipedStarted}
 */
proto.model.NotificationEventPipedStarted.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventPipedStarted;
  return proto.model.NotificationEventPipedStarted.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventPipedStarted} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventPipedStarted}
 */
proto.model.NotificationEventPipedStarted.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventPipedStarted.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventPipedStarted.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventPipedStarted} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventPipedStarted.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.NotificationEventPipedStarted.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStarted} returns this
 */
proto.model.NotificationEventPipedStarted.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.model.NotificationEventPipedStarted.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStarted} returns this
 */
proto.model.NotificationEventPipedStarted.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.model.NotificationEventPipedStarted.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStarted} returns this
 */
proto.model.NotificationEventPipedStarted.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string project_id = 4;
 * @return {string}
 */
proto.model.NotificationEventPipedStarted.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStarted} returns this
 */
proto.model.NotificationEventPipedStarted.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.model.NotificationEventPipedStopped.prototype.toObject = function(opt_includeInstance) {
  return proto.model.NotificationEventPipedStopped.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.model.NotificationEventPipedStopped} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventPipedStopped.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    name: jspb.Message.getFieldWithDefault(msg, 2, ""),
    version: jspb.Message.getFieldWithDefault(msg, 3, ""),
    projectId: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.model.NotificationEventPipedStopped}
 */
proto.model.NotificationEventPipedStopped.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.model.NotificationEventPipedStopped;
  return proto.model.NotificationEventPipedStopped.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.model.NotificationEventPipedStopped} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.model.NotificationEventPipedStopped}
 */
proto.model.NotificationEventPipedStopped.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setProjectId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.model.NotificationEventPipedStopped.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.model.NotificationEventPipedStopped.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.model.NotificationEventPipedStopped} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.model.NotificationEventPipedStopped.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getProjectId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.model.NotificationEventPipedStopped.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStopped} returns this
 */
proto.model.NotificationEventPipedStopped.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.model.NotificationEventPipedStopped.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStopped} returns this
 */
proto.model.NotificationEventPipedStopped.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string version = 3;
 * @return {string}
 */
proto.model.NotificationEventPipedStopped.prototype.getVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStopped} returns this
 */
proto.model.NotificationEventPipedStopped.prototype.setVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string project_id = 4;
 * @return {string}
 */
proto.model.NotificationEventPipedStopped.prototype.getProjectId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.model.NotificationEventPipedStopped} returns this
 */
proto.model.NotificationEventPipedStopped.prototype.setProjectId = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * @enum {number}
 */
proto.model.NotificationEventType = {
  EVENT_DEPLOYMENT_TRIGGERED: 0,
  EVENT_DEPLOYMENT_PLANNED: 1,
  EVENT_DEPLOYMENT_APPROVED: 2,
  EVENT_DEPLOYMENT_ROLLING_BACK: 3,
  EVENT_DEPLOYMENT_SUCCEEDED: 4,
  EVENT_DEPLOYMENT_FAILED: 5,
  EVENT_DEPLOYMENT_CANCELLED: 6,
  EVENT_DEPLOYMENT_WAIT_APPROVAL: 7,
  EVENT_DEPLOYMENT_TRIGGER_FAILED: 8,
  EVENT_APPLICATION_SYNCED: 100,
  EVENT_APPLICATION_OUT_OF_SYNC: 101,
  EVENT_APPLICATION_HEALTHY: 200,
  EVENT_PIPED_STARTED: 300,
  EVENT_PIPED_STOPPED: 301
};

/**
 * @enum {number}
 */
proto.model.NotificationEventGroup = {
  EVENT_NONE: 0,
  EVENT_DEPLOYMENT: 1,
  EVENT_APPLICATION_SYNC: 2,
  EVENT_APPLICATION_HEALTH: 3,
  EVENT_PIPED: 4
};

goog.object.extend(exports, proto.model);
